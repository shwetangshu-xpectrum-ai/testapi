{"version":3,"file":"index-DCZN_lGo.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/pages/ApiDoc.tsx","../../src/pages/ErrorPage.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport ReactDOM from 'react-dom';\nimport '../styles/ApiDoc.css';\n\ninterface ParamType {\n  name: string;\n  type: string;\n  required: boolean;\n  example: string;\n  description?: string;\n}\n\n// Interface for employee data\ninterface EmployeeDataType {\n  employee_id: string;\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  phone_number?: string;\n  hire_date?: string;\n  job_title?: string;\n  job_id?: number;\n  gov_id?: string;\n  hiring_manager_id?: string;\n  hr_manager_id?: string;\n  marital_status?: string;\n  state?: string;\n  emergency_contact_name?: string;\n  emergency_contact_phone?: string;\n  sex?: string;\n  department?: string;\n  date_of_birth?: string;\n  status?: string;\n}\n\n// Interface for salary info\ninterface SalaryInfoType {\n  employee_id: string;\n  base_salary?: number;\n  salary_type?: string;\n  bonus?: number;\n  commission?: number;\n  currency?: string;\n  salary_grade?: string;\n  last_salary_increase_date?: string;\n}\n\n// Interface for payroll data\ninterface PayrollDataType {\n  employee_id: string;\n  base_salary?: number;\n  federal_tax?: number;\n  state_tax?: number;\n  total_tax?: number;\n  month?: string;\n  salary_received_day?: string;\n}\n\n// Interface for employee insurance data\ninterface EmployeeInsuranceDataType {\n  employee_id: string;\n  plan_name?: string;\n  insurance_plan_id?: string;\n  enrollment_date?: string;\n  coverage_type?: string;\n  employee_contribution?: number;\n  enrollment_time?: string;\n}\n\n// Interface for insurance data\ninterface InsuranceDataType {\n  employee_id: string;\n  plan_name?: string;\n  insurance_plan_id?: string;\n  enrollment_date?: string;\n  coverage_type?: string;\n  employee_contribution?: number;\n  enrollment_time?: string;\n  premium_per_month?: number;\n}\n\n// Interface for insurance plan\ninterface InsurancePlanType {\n  plan_name: string;\n  plan_id?: string;\n  network?: string;\n  deductible_individual_family?: string;\n  out_of_pocket_maximum_individual_family?: string;\n  coinsurance?: string;\n  overall_lifetime_maximum?: string;\n  rates_premium_employee_only?: number;\n  rates_premium_employer_contribution_employee_only?: number;\n  rates_premium_employee_contribution_employee_only?: number;\n  rates_premium_employee_spouse?: number;\n  rates_premium_employer_contribution_employee_spouse?: number;\n  rates_premium_employee_contribution_employee_spouse?: number;\n  rates_premium_employee_children?: number;\n  rates_premium_employer_contribution_employee_children?: number;\n  rates_premium_employee_contribution_employee_children?: number;\n  rates_premium_family?: number;\n  rates_premium_employer_contribution_family?: number;\n  rates_premium_employee_contribution_family?: number;\n}\n\n// Interface for leave balance data\ninterface LeaveBalanceDataType {\n  employee_id: string;\n  annual_leave_balance?: number;\n  sick_leave_balance?: number;\n  personal_leave_balance?: number;\n  unpaid_leave_taken?: number;\n  leave_balance_updated_date?: string;\n}\n\n// Interface for leave requests\ninterface LeaveRequestsType {\n  employee_id?: string;\n  application_id: number;\n  start_date?: string;\n  total_working_days_off?: number;\n  total_days_off?: number;\n  end_date?: string;\n  deduction_from_salary?: number;\n  leave_type?: string;\n  reason?: string;\n  request_date?: string;\n  request_time?: string;\n  reviewed_by?: string;\n  status?: string;\n  approved_by?: string;\n}\n\ninterface EndpointDataType {\n  title: string;\n  method: string;\n  url: string;\n  badge: string;\n  breadcrumb: string;\n  queryParams: ParamType[];\n  headerParams: ParamType[];\n  bodyParams?: ParamType[];\n  response: {\n    example: string;\n  };\n}\n\ninterface EndpointsType {\n  [key: string]: EndpointDataType;\n}\n\n// Add request body model interfaces after the existing interfaces\ninterface EmployeeDataModel {\n  employee_id: string;\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  phone_number?: string;\n  hire_date?: string;\n  job_title?: string;\n  job_id?: number;\n  gov_id?: string;\n  hiring_manager_id?: string;\n  hr_manager_id?: string;\n  marital_status?: string;\n  state?: string;\n  emergency_contact_name?: string;\n  emergency_contact_phone?: string;\n  sex?: string;\n  department?: string;\n  date_of_birth?: string;\n  status?: string;\n}\n\ninterface EmployeeInsuranceDataModel {\n  employee_id: string;\n  plan_name?: string;\n  insurance_plan_id?: string;\n  enrollment_date?: string;\n  coverage_type?: string;\n  employee_contribution?: number;\n  enrollment_time?: string;\n}\n\ninterface InsurancePlanModel {\n  plan_name: string;\n  plan_id?: string;\n  network?: string;\n  deductible_individual_family?: string;\n  out_of_pocket_maximum_individual_family?: string;\n  coinsurance?: string;\n  overall_lifetime_maximum?: string;\n  rates_premium_employee_only?: number;\n  rates_premium_employer_contribution_employee_only?: number;\n  rates_premium_employee_contribution_employee_only?: number;\n  rates_premium_employee_spouse?: number;\n  rates_premium_employer_contribution_employee_spouse?: number;\n  rates_premium_employee_contribution_employee_spouse?: number;\n  rates_premium_employee_children?: number;\n  rates_premium_employer_contribution_employee_children?: number;\n  rates_premium_employee_contribution_employee_children?: number;\n  rates_premium_family?: number;\n  rates_premium_employer_contribution_family?: number;\n  rates_premium_employee_contribution_family?: number;\n}\n\ninterface LeaveBalanceDataModel {\n  employee_id: string;\n  annual_leave_balance?: number;\n  sick_leave_balance?: number;\n  personal_leave_balance?: number;\n  unpaid_leave_taken?: number;\n  leave_balance_updated_date?: string;\n}\n\ninterface LeaveRequestsModel {\n  employee_id?: string;\n  application_id: number;\n  start_date?: string;\n  total_working_days_off?: number;\n  total_days_off?: number;\n  end_date?: string;\n  deduction_from_salary?: number;\n  leave_type?: string;\n  reason?: string;\n  request_date?: string;\n  request_time?: string;\n  reviewed_by?: string;\n  status?: string;\n  approved_by?: string;\n}\n\ninterface PayrollModel {\n  employee_id: string;\n  base_salary?: number;\n  federal_tax?: number;\n  state_tax?: number;\n  total_tax?: number;\n  month?: string;\n  salary_received_day?: string;\n}\n\ninterface SalaryInfoModel {\n  employee_id: string;\n  base_salary?: number;\n  salary_type?: string;\n  bonus?: number;\n  commission?: number;\n  currency?: string;\n  salary_grade?: string;\n  last_salary_increase_date?: string;\n}\n\ninterface HarassmentReportsModel {\n  complaint_id?: number;\n  victim_employee_id?: number;\n  harasser_employee_id?: number;\n  harassment_level?: string;\n  description?: string;\n  status?: string;\n  review_body?: string;\n  incident_date?: string;\n  incident_time?: string;\n  reported_date?: string;\n  reported_time?: string;\n  level?: string;\n}\n\nconst ApiDoc: React.FC = (): JSX.Element => {\n  const [activeTab, setActiveTab] = useState('shell');\n  const [responseOpen, setResponseOpen] = useState(true);\n  const [openCategories, setOpenCategories] = useState<string[]>(['employee', 'salary', 'payroll', 'insurance', 'leave']);\n  const [activeEndpoint, setActiveEndpoint] = useState('getAllEmployees');\n  const [dropdownOpen, setDropdownOpen] = useState(false);\n  const [mobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [darkMode, setDarkMode] = useState(true);\n  const [searchTerm, setSearchTerm] = useState('');\n  const dropdownRef = useRef<HTMLDivElement>(null);\n  const [dropdownPosition, setDropdownPosition] = useState({ top: 0, left: 0, width: 0 });\n  const [animating, setAnimating] = useState(false);\n  const dropdownButtonRef = useRef<HTMLButtonElement>(null);\n  \n  // API call state\n  const [apiKey, setApiKey] = useState('');\n  const [apiResponse, setApiResponse] = useState<any>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [showTryItModal, setShowTryItModal] = useState(false);\n  const [apiError, setApiError] = useState('');\n  const [requestParams, setRequestParams] = useState<{[key: string]: string}>({});\n  const [copiedCode, setCopiedCode] = useState(false);\n  const [activeRequestTab, setActiveRequestTab] = useState('params');\n  const [responseDetails, setResponseDetails] = useState<{\n    status: number;\n    statusText: string;\n    time: number;\n    size: string;\n    headers?: Record<string, string>;\n  } | null>(null);\n  const [requestHeaders, setRequestHeaders] = useState<{[key: string]: string}>({\n    'Content-Type': 'application/json',\n    'Authorization': 'Bearer token123',\n  });\n  const [rawBody, setRawBody] = useState('');\n  const [bodyType, setBodyType] = useState('form');\n  const [showEnvironmentModal, setShowEnvironmentModal] = useState(false);\n  const [environments, setEnvironments] = useState<Array<{name: string, variables: {[key: string]: string}}>>([\n    { \n      name: 'Development', \n      variables: { \n        'baseUrl': 'https://dev-api.employeedb.com/v1',\n        'apiKey': 'dev_api_key_123'\n      } \n    },\n    { \n      name: 'Production', \n      variables: { \n        'baseUrl': 'https://api.employeedb.com/v1',\n        'apiKey': 'prod_api_key_456'\n      } \n    }\n  ]);\n  const [activeEnvironment, setActiveEnvironment] = useState('Development');\n  const [apiBaseUrl, setApiBaseUrl] = useState('https://hrms-api.xpectrum-ai.com/hrms/api/v1');\n  const [realEmployeeId, setRealEmployeeId] = useState('EM37938');\n\n  // Add a state for editing mode\n  const [isEditingApiConfig, setIsEditingApiConfig] = useState(false);\n\n  // Add a new state variable\n  const [isResponseFromApi, setIsResponseFromApi] = useState(false);\n  \n  // Add state for editable URL\n  const [editableUrl, setEditableUrl] = useState('');\n  const [isEditingUrl, setIsEditingUrl] = useState(false);\n\n  // Initialize apiBaseUrl from localStorage if available\n  useEffect(() => {\n    const savedBaseUrl = localStorage.getItem('apiBaseUrl');\n    if (savedBaseUrl) {\n      setApiBaseUrl(savedBaseUrl);\n    }\n  }, []);\n  \n  // Save apiBaseUrl to localStorage whenever it changes\n  useEffect(() => {\n    if (apiBaseUrl) {\n      localStorage.setItem('apiBaseUrl', apiBaseUrl);\n    }\n  }, [apiBaseUrl]);\n\n  const endpointData: EndpointsType = {\n    getAllEmployees: {\n      title: 'Get All Employees',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/all_employee_data',\n      badge: 'Stable',\n      breadcrumb: 'Employee',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'department', type: 'string', required: false, example: 'Example: Engineering' },\n        { name: 'status', type: 'string', required: false, example: 'Example: active' },\n        { name: 'page', type: 'integer', required: false, example: 'Example: 1' },\n        { name: 'limit', type: 'integer', required: false, example: 'Example: 10' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"total\": 100,\n  \"page\": 1,\n  \"limit\": 10,\n  \"employees\": [\n    {\n      \"employee_id\": \"EMP001\",\n      \"first_name\": \"John\",\n      \"last_name\": \"Smith\",\n      \"email\": \"john.smith@example.com\",\n      \"phone_number\": \"+1 123-456-7890\",\n      \"hire_date\": \"2019-06-15\",\n      \"job_title\": \"Senior Developer\",\n      \"job_id\": 5,\n      \"hiring_manager_id\": \"EMP005\",\n      \"hr_manager_id\": \"EMP010\",\n      \"department\": \"Engineering\",\n      \"status\": \"active\"\n    },\n    {\n      \"employee_id\": \"EMP002\",\n      \"first_name\": \"Jane\",\n      \"last_name\": \"Doe\",\n      \"email\": \"jane.doe@example.com\",\n      \"phone_number\": \"+1 123-456-7891\",\n      \"hire_date\": \"2020-03-10\",\n      \"job_title\": \"Product Manager\",\n      \"job_id\": 8, \n      \"hiring_manager_id\": \"EMP007\",\n      \"hr_manager_id\": \"EMP010\",\n      \"department\": \"Product\",\n      \"status\": \"active\"\n    }\n  ]\n}`\n      }\n    },\n    getEmployeeById: {\n      title: 'Get Employee by ID',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/employee_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Employee',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"phone_number\": \"+1 123-456-7890\",\n  \"hire_date\": \"2019-06-15\",\n  \"job_title\": \"Senior Developer\",\n  \"job_id\": 5,\n  \"gov_id\": \"123-45-6789\",\n  \"hiring_manager_id\": \"EMP005\",\n  \"hr_manager_id\": \"EMP010\",\n  \"marital_status\": \"married\",\n  \"state\": \"California\",\n  \"emergency_contact_name\": \"Jane Smith\",\n  \"emergency_contact_phone\": \"+1 123-456-7899\",\n  \"sex\": \"male\",\n  \"department\": \"Engineering\",\n  \"date_of_birth\": \"1985-04-12\",\n  \"status\": \"active\"\n}`\n      }\n    },\n    createEmployee: {\n      title: 'Create Employee',\n      method: 'POST',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/employee_data',\n      badge: 'Stable',\n      breadcrumb: 'Employee',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'source', type: 'string', required: false, example: 'Example: system' },\n        { name: 'sync', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'first_name', type: 'string', required: true, example: 'Example: John' },\n        { name: 'last_name', type: 'string', required: true, example: 'Example: Smith' },\n        { name: 'email', type: 'string', required: true, example: 'Example: john.smith@example.com' },\n        { name: 'phone_number', type: 'string', required: false, example: 'Example: +1 123-456-7890' },\n        { name: 'hire_date', type: 'string', required: true, example: 'Example: 2023-05-15' },\n        { name: 'job_title', type: 'string', required: true, example: 'Example: Software Developer' },\n        { name: 'job_id', type: 'integer', required: false, example: 'Example: 3' },\n        { name: 'hiring_manager_id', type: 'string', required: false, example: 'Example: EMP005' },\n        { name: 'hr_manager_id', type: 'string', required: false, example: 'Example: EMP010' },\n        { name: 'department', type: 'string', required: true, example: 'Example: Engineering' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP003\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"phone_number\": \"+1 123-456-7890\",\n  \"hire_date\": \"2023-05-15\",\n  \"job_title\": \"Software Developer\",\n  \"job_id\": 3,\n  \"hiring_manager_id\": \"EMP005\",\n  \"hr_manager_id\": \"EMP010\",\n  \"department\": \"Engineering\",\n  \"status\": \"active\"\n}`\n      }\n    },\n    updateEmployee: {\n      title: 'Update Employee',\n      method: 'PUT',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/employee_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Employee',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'source', type: 'string', required: false, example: 'Example: system' },\n        { name: 'notify', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'first_name', type: 'string', required: false, example: 'Example: John' },\n        { name: 'last_name', type: 'string', required: false, example: 'Example: Smith' },\n        { name: 'email', type: 'string', required: false, example: 'Example: john.smith@example.com' },\n        { name: 'phone_number', type: 'string', required: false, example: 'Example: +1 123-456-7890' },\n        { name: 'job_title', type: 'string', required: false, example: 'Example: Senior Developer' },\n        { name: 'job_id', type: 'integer', required: false, example: 'Example: 5' },\n        { name: 'department', type: 'string', required: false, example: 'Example: Engineering' },\n        { name: 'status', type: 'string', required: false, example: 'Example: inactive' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\",\n  \"email\": \"john.smith@example.com\",\n  \"phone_number\": \"+1 123-456-7890\",\n  \"hire_date\": \"2019-06-15\",\n  \"job_title\": \"Senior Developer\",\n  \"job_id\": 5,\n  \"department\": \"Engineering\",\n  \"status\": \"inactive\",\n  \"updated_at\": \"2023-05-20T15:30:45Z\"\n}`\n      }\n    },\n    deleteEmployee: {\n      title: 'Delete Employee',\n      method: 'DELETE',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/employee_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Employee',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'force', type: 'boolean', required: false, example: 'Example: false' },\n        { name: 'archive', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"success\": true,\n  \"message\": \"Employee with ID EMP001 has been successfully deleted\",\n  \"deleted_at\": \"2023-05-22T10:15:20Z\"\n}`\n      }\n    },\n    getSalaryInfo: {\n      title: 'Get Salary Information',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/salary_info/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Salary',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"base_salary\": 85000.00,\n  \"salary_type\": \"annual\",\n  \"bonus\": 5000.00,\n  \"commission\": 0.00,\n  \"currency\": \"USD\",\n  \"salary_grade\": \"L3\",\n  \"last_salary_increase_date\": \"2023-01-01\"\n}`\n      }\n    },\n    updateSalaryInfo: {\n      title: 'Update Salary Information',\n      method: 'PUT',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/salary_info/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Salary',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'backdated', type: 'boolean', required: false, example: 'Example: false' },\n        { name: 'notify', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'base_salary', type: 'number', required: false, example: 'Example: 90000.00' },\n        { name: 'salary_type', type: 'string', required: false, example: 'Example: annual' },\n        { name: 'bonus', type: 'number', required: false, example: 'Example: 6000.00' },\n        { name: 'commission', type: 'number', required: false, example: 'Example: 2000.00' },\n        { name: 'currency', type: 'string', required: false, example: 'Example: USD' },\n        { name: 'salary_grade', type: 'string', required: false, example: 'Example: L4' },\n        { name: 'last_salary_increase_date', type: 'string', required: false, example: 'Example: 2023-05-01' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"base_salary\": 90000.00,\n  \"salary_type\": \"annual\",\n  \"bonus\": 6000.00,\n  \"commission\": 2000.00,\n  \"currency\": \"USD\",\n  \"salary_grade\": \"L4\",\n  \"last_salary_increase_date\": \"2023-05-01\",\n  \"updated_at\": \"2023-05-20T14:30:45Z\"\n}`\n      }\n    },\n    createSalaryInfo: {\n      title: 'Create Salary Information',\n      method: 'POST',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/salary_info',\n      badge: 'Stable',\n      breadcrumb: 'Salary',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'backdated', type: 'boolean', required: false, example: 'Example: false' },\n        { name: 'effective_date', type: 'string', required: false, example: 'Example: 2023-06-01' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'employee_id', type: 'string', required: true, example: 'Example: EMP003' },\n        { name: 'base_salary', type: 'number', required: true, example: 'Example: 75000.00' },\n        { name: 'salary_type', type: 'string', required: true, example: 'Example: annual' },\n        { name: 'bonus', type: 'number', required: false, example: 'Example: 2000.00' },\n        { name: 'commission', type: 'number', required: false, example: 'Example: 0.00' },\n        { name: 'currency', type: 'string', required: false, example: 'Example: USD' },\n        { name: 'salary_grade', type: 'string', required: false, example: 'Example: L2' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP003\",\n  \"base_salary\": 75000.00,\n  \"salary_type\": \"annual\",\n  \"bonus\": 2000.00,\n  \"commission\": 0.00,\n  \"currency\": \"USD\",\n  \"salary_grade\": \"L2\",\n  \"created_at\": \"2023-05-22T10:15:20Z\"\n}`\n      }\n    },\n    getPayrollData: {\n      title: 'Get Payroll Data',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/payroll/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Payroll',\n      queryParams: [\n        { name: 'month', type: 'string', required: false, example: 'Example: 2023-05' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"base_salary\": 85000.00,\n  \"federal_tax\": 1458.33,\n  \"state_tax\": 625.00,\n  \"total_tax\": 2083.33,\n  \"month\": \"2023-05\",\n  \"salary_received_day\": \"2023-05-30\"\n}`\n      }\n    },\n    updatePayrollData: {\n      title: 'Update Payroll Data',\n      method: 'PUT',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/payroll/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Payroll',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'base_salary', type: 'number', required: false, example: 'Example: 85000.00' },\n        { name: 'federal_tax', type: 'number', required: false, example: 'Example: 1458.33' },\n        { name: 'state_tax', type: 'number', required: false, example: 'Example: 625.00' },\n        { name: 'total_tax', type: 'number', required: false, example: 'Example: 2083.33' },\n        { name: 'month', type: 'string', required: true, example: 'Example: 2023-05' },\n        { name: 'salary_received_day', type: 'string', required: false, example: 'Example: 2023-05-30' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"base_salary\": 85000.00,\n  \"federal_tax\": 1458.33,\n  \"state_tax\": 625.00,\n  \"total_tax\": 2083.33,\n  \"month\": \"2023-05\",\n  \"salary_received_day\": \"2023-05-30\",\n  \"updated_at\": \"2023-05-25T09:45:12Z\"\n}`\n      }\n    },\n    createPayrollData: {\n      title: 'Create Payroll Data',\n      method: 'POST',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/payroll',\n      badge: 'Stable',\n      breadcrumb: 'Payroll',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'tax_year', type: 'string', required: false, example: 'Example: 2023' },\n        { name: 'recalculate', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'employee_id', type: 'string', required: true, example: 'Example: EMP001' },\n        { name: 'base_salary', type: 'number', required: true, example: 'Example: 85000.00' },\n        { name: 'federal_tax', type: 'number', required: true, example: 'Example: 1458.33' },\n        { name: 'state_tax', type: 'number', required: true, example: 'Example: 625.00' },\n        { name: 'total_tax', type: 'number', required: true, example: 'Example: 2083.33' },\n        { name: 'month', type: 'string', required: true, example: 'Example: 2023-06' },\n        { name: 'salary_received_day', type: 'string', required: true, example: 'Example: 2023-06-30' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"base_salary\": 85000.00,\n  \"federal_tax\": 1458.33,\n  \"state_tax\": 625.00,\n  \"total_tax\": 2083.33,\n  \"month\": \"2023-06\",\n  \"salary_received_day\": \"2023-06-30\",\n  \"created_at\": \"2023-06-01T14:30:20Z\"\n}`\n      }\n    },\n    getEmployeeInsuranceData: {\n      title: 'Get Employee Insurance Data',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/employee_insurance_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Insurance',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"plan_name\": \"Premium Health Plan\",\n  \"insurance_plan_id\": \"INS-PLAN-001\",\n  \"enrollment_date\": \"2022-01-15\",\n  \"coverage_type\": \"family\",\n  \"employee_contribution\": 250.00,\n  \"enrollment_time\": \"10:30:45\"\n}`\n      }\n    },\n    updateEmployeeInsuranceData: {\n      title: 'Update Employee Insurance Data',\n      method: 'PUT',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/employee_insurance_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Insurance',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'effective_date', type: 'string', required: false, example: 'Example: 2023-07-01' },\n        { name: 'notify', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'plan_name', type: 'string', required: false, example: 'Example: Gold Health Plan' },\n        { name: 'insurance_plan_id', type: 'string', required: false, example: 'Example: INS-PLAN-002' },\n        { name: 'enrollment_date', type: 'string', required: false, example: 'Example: 2023-01-15' },\n        { name: 'coverage_type', type: 'string', required: false, example: 'Example: employee+spouse' },\n        { name: 'employee_contribution', type: 'number', required: false, example: 'Example: 180.00' },\n        { name: 'enrollment_time', type: 'string', required: false, example: 'Example: 11:45:30' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"plan_name\": \"Gold Health Plan\",\n  \"insurance_plan_id\": \"INS-PLAN-002\",\n  \"enrollment_date\": \"2023-01-15\",\n  \"coverage_type\": \"employee+spouse\",\n  \"employee_contribution\": 180.00,\n  \"enrollment_time\": \"11:45:30\",\n  \"updated_at\": \"2023-02-10T09:15:22Z\"\n}`\n      }\n    },\n    createEmployeeInsuranceData: {\n      title: 'Create Employee Insurance Data',\n      method: 'POST',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/employee_insurance_data',\n      badge: 'Stable',\n      breadcrumb: 'Insurance',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'immediate', type: 'boolean', required: false, example: 'Example: true' },\n        { name: 'notify_hr', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'employee_id', type: 'string', required: true, example: 'Example: EMP003' },\n        { name: 'plan_name', type: 'string', required: true, example: 'Example: Standard Health Plan' },\n        { name: 'insurance_plan_id', type: 'string', required: true, example: 'Example: INS-PLAN-003' },\n        { name: 'enrollment_date', type: 'string', required: true, example: 'Example: 2023-05-01' },\n        { name: 'coverage_type', type: 'string', required: true, example: 'Example: employee_only' },\n        { name: 'employee_contribution', type: 'number', required: true, example: 'Example: 120.00' },\n        { name: 'enrollment_time', type: 'string', required: false, example: 'Example: 09:30:00' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP003\",\n  \"plan_name\": \"Standard Health Plan\",\n  \"insurance_plan_id\": \"INS-PLAN-003\",\n  \"enrollment_date\": \"2023-05-01\",\n  \"coverage_type\": \"employee_only\",\n  \"employee_contribution\": 120.00,\n  \"enrollment_time\": \"09:30:00\",\n  \"created_at\": \"2023-05-01T09:30:00Z\"\n}`\n      }\n    },\n    getInsuranceData: {\n      title: 'Get Insurance Data',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/insurance_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Insurance',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"plan_name\": \"Premium Health Plan\",\n  \"insurance_plan_id\": \"INS-PLAN-001\",\n  \"enrollment_date\": \"2022-01-15\",\n  \"coverage_type\": \"family\",\n  \"employee_contribution\": 250.00,\n  \"enrollment_time\": \"10:30:45\",\n  \"premium_per_month\": 950.00\n}`\n      }\n    },\n    getInsurancePlan: {\n      title: 'Get Insurance Plan',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/insurance_plan/{plan_name}',\n      badge: 'Stable',\n      breadcrumb: 'Insurance',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"plan_name\": \"Premium Health Plan\",\n  \"plan_id\": \"INS-PLAN-001\",\n  \"network\": \"Nationwide\",\n  \"deductible_individual_family\": \"$500/$1000\",\n  \"out_of_pocket_maximum_individual_family\": \"$3000/$6000\",\n  \"coinsurance\": \"80/20\",\n  \"overall_lifetime_maximum\": \"Unlimited\",\n  \"rates_premium_employee_only\": 500.00,\n  \"rates_premium_employer_contribution_employee_only\": 400.00,\n  \"rates_premium_employee_contribution_employee_only\": 100.00,\n  \"rates_premium_employee_spouse\": 800.00,\n  \"rates_premium_employer_contribution_employee_spouse\": 600.00,\n  \"rates_premium_employee_contribution_employee_spouse\": 200.00,\n  \"rates_premium_employee_children\": 750.00,\n  \"rates_premium_employer_contribution_employee_children\": 550.00,\n  \"rates_premium_employee_contribution_employee_children\": 200.00,\n  \"rates_premium_family\": 1200.00,\n  \"rates_premium_employer_contribution_family\": 950.00,\n  \"rates_premium_employee_contribution_family\": 250.00\n}`\n      }\n    },\n    createInsurancePlan: {\n      title: 'Create Insurance Plan',\n      method: 'POST',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/insurance_plan',\n      badge: 'Stable',\n      breadcrumb: 'Insurance',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'effective_date', type: 'string', required: false, example: 'Example: 2023-08-01' },\n        { name: 'company_wide', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'plan_name', type: 'string', required: true, example: 'Example: Essential Health Plan' },\n        { name: 'plan_id', type: 'string', required: true, example: 'Example: INS-PLAN-004' },\n        { name: 'network', type: 'string', required: false, example: 'Example: Regional' },\n        { name: 'deductible_individual_family', type: 'string', required: false, example: 'Example: $1000/$2000' },\n        { name: 'out_of_pocket_maximum_individual_family', type: 'string', required: false, example: 'Example: $5000/$10000' },\n        { name: 'coinsurance', type: 'string', required: false, example: 'Example: 70/30' },\n        { name: 'overall_lifetime_maximum', type: 'string', required: false, example: 'Example: Unlimited' },\n        { name: 'rates_premium_employee_only', type: 'number', required: true, example: 'Example: 350.00' },\n        { name: 'rates_premium_employer_contribution_employee_only', type: 'number', required: true, example: 'Example: 250.00' },\n        { name: 'rates_premium_employee_contribution_employee_only', type: 'number', required: true, example: 'Example: 100.00' },\n        { name: 'rates_premium_employee_spouse', type: 'number', required: false, example: 'Example: 600.00' },\n        { name: 'rates_premium_employer_contribution_employee_spouse', type: 'number', required: false, example: 'Example: 450.00' },\n        { name: 'rates_premium_employee_contribution_employee_spouse', type: 'number', required: false, example: 'Example: 150.00' }\n      ],\n      response: {\n        example: `{\n  \"plan_name\": \"Essential Health Plan\",\n  \"plan_id\": \"INS-PLAN-004\",\n  \"network\": \"Regional\",\n  \"deductible_individual_family\": \"$1000/$2000\",\n  \"out_of_pocket_maximum_individual_family\": \"$5000/$10000\",\n  \"coinsurance\": \"70/30\",\n  \"overall_lifetime_maximum\": \"Unlimited\",\n  \"rates_premium_employee_only\": 350.00,\n  \"rates_premium_employer_contribution_employee_only\": 250.00,\n  \"rates_premium_employee_contribution_employee_only\": 100.00,\n  \"rates_premium_employee_spouse\": 600.00,\n  \"rates_premium_employer_contribution_employee_spouse\": 450.00,\n  \"rates_premium_employee_contribution_employee_spouse\": 150.00,\n  \"created_at\": \"2023-05-15T15:45:30Z\"\n}`\n      }\n    },\n    getLeaveBalanceData: {\n      title: 'Get Leave Balance Data',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/leave_balance_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Leave',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"annual_leave_balance\": 15,\n  \"sick_leave_balance\": 10,\n  \"personal_leave_balance\": 3,\n  \"unpaid_leave_taken\": 0,\n  \"leave_balance_updated_date\": \"2023-05-01\"\n}`\n      }\n    },\n    updateLeaveBalanceData: {\n      title: 'Update Leave Balance Data',\n      method: 'PUT',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/leave_balance_data/{employee_id}',\n      badge: 'Stable',\n      breadcrumb: 'Leave',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'reset', type: 'boolean', required: false, example: 'Example: false' },\n        { name: 'prorate', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'annual_leave_balance', type: 'integer', required: false, example: 'Example: 12' },\n        { name: 'sick_leave_balance', type: 'integer', required: false, example: 'Example: 8' },\n        { name: 'personal_leave_balance', type: 'integer', required: false, example: 'Example: 2' },\n        { name: 'unpaid_leave_taken', type: 'integer', required: false, example: 'Example: 1' },\n        { name: 'leave_balance_updated_date', type: 'string', required: false, example: 'Example: 2023-05-15' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP001\",\n  \"annual_leave_balance\": 12,\n  \"sick_leave_balance\": 8,\n  \"personal_leave_balance\": 2,\n  \"unpaid_leave_taken\": 1,\n  \"leave_balance_updated_date\": \"2023-05-15\",\n  \"updated_at\": \"2023-05-15T10:20:30Z\"\n}`\n      }\n    },\n    createLeaveBalanceData: {\n      title: 'Create Leave Balance Data',\n      method: 'POST',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/leave_balance_data',\n      badge: 'Stable',\n      breadcrumb: 'Leave',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'year', type: 'string', required: false, example: 'Example: 2023' },\n        { name: 'prorate', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'employee_id', type: 'string', required: true, example: 'Example: EMP003' },\n        { name: 'annual_leave_balance', type: 'integer', required: true, example: 'Example: 20' },\n        { name: 'sick_leave_balance', type: 'integer', required: true, example: 'Example: 12' },\n        { name: 'personal_leave_balance', type: 'integer', required: true, example: 'Example: 5' },\n        { name: 'unpaid_leave_taken', type: 'integer', required: false, example: 'Example: 0' },\n        { name: 'leave_balance_updated_date', type: 'string', required: true, example: 'Example: 2023-05-01' }\n      ],\n      response: {\n        example: `{\n  \"employee_id\": \"EMP003\",\n  \"annual_leave_balance\": 20,\n  \"sick_leave_balance\": 12,\n  \"personal_leave_balance\": 5,\n  \"unpaid_leave_taken\": 0,\n  \"leave_balance_updated_date\": \"2023-05-01\",\n  \"created_at\": \"2023-05-01T09:00:00Z\"\n}`\n      }\n    },\n    getLeaveRequest: {\n      title: 'Get Leave Request',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/leave_requests/{application_id}',\n      badge: 'Stable',\n      breadcrumb: 'Leave',\n      queryParams: [],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"application_id\": 12345,\n  \"employee_id\": \"EMP001\",\n  \"start_date\": \"2023-06-10\",\n  \"total_working_days_off\": 5,\n  \"total_days_off\": 7,\n  \"end_date\": \"2023-06-16\",\n  \"deduction_from_salary\": 0,\n  \"leave_type\": \"annual\",\n  \"reason\": \"Family vacation\",\n  \"request_date\": \"2023-05-15\",\n  \"request_time\": \"14:30:00\",\n  \"reviewed_by\": \"EMP010\",\n  \"status\": \"approved\",\n  \"approved_by\": \"EMP010\"\n}`\n      }\n    },\n    getAllLeaveRequests: {\n      title: 'Get All Leave Requests',\n      method: 'GET',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/leave_requests',\n      badge: 'Stable',\n      breadcrumb: 'Leave',\n      queryParams: [\n        { name: 'employee_id', type: 'string', required: false, example: 'Example: EMP001' },\n        { name: 'status', type: 'string', required: false, example: 'Example: approved' },\n        { name: 'leave_type', type: 'string', required: false, example: 'Example: annual' },\n        { name: 'start_date_from', type: 'string', required: false, example: 'Example: 2023-01-01' },\n        { name: 'start_date_to', type: 'string', required: false, example: 'Example: 2023-12-31' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      response: {\n        example: `{\n  \"total\": 25,\n  \"requests\": [\n    {\n      \"application_id\": 12345,\n      \"employee_id\": \"EMP001\",\n      \"start_date\": \"2023-06-10\",\n      \"total_working_days_off\": 5,\n      \"end_date\": \"2023-06-16\",\n      \"leave_type\": \"annual\",\n      \"status\": \"approved\"\n    },\n    {\n      \"application_id\": 12346,\n      \"employee_id\": \"EMP002\",\n      \"start_date\": \"2023-07-05\",\n      \"total_working_days_off\": 2,\n      \"end_date\": \"2023-07-06\",\n      \"leave_type\": \"sick\",\n      \"status\": \"approved\"\n    }\n  ]\n}`\n      }\n    },\n    createLeaveRequest: {\n      title: 'Create Leave Request',\n      method: 'POST',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/leave_requests',\n      badge: 'Stable',\n      breadcrumb: 'Leave',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'auto_approve', type: 'boolean', required: false, example: 'Example: false' },\n        { name: 'notify', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'employee_id', type: 'string', required: true, example: 'Example: EMP001' },\n        { name: 'start_date', type: 'string', required: true, example: 'Example: 2023-07-15' },\n        { name: 'end_date', type: 'string', required: true, example: 'Example: 2023-07-19' },\n        { name: 'leave_type', type: 'string', required: true, example: 'Example: annual' },\n        { name: 'reason', type: 'string', required: true, example: 'Example: Family event' },\n        { name: 'total_working_days_off', type: 'integer', required: false, example: 'Example: 5' },\n        { name: 'total_days_off', type: 'integer', required: false, example: 'Example: 5' },\n        { name: 'deduction_from_salary', type: 'integer', required: false, example: 'Example: 0' }\n      ],\n      response: {\n        example: `{\n  \"application_id\": 12347,\n  \"employee_id\": \"EMP001\",\n  \"start_date\": \"2023-07-15\",\n  \"total_working_days_off\": 5,\n  \"total_days_off\": 5,\n  \"end_date\": \"2023-07-19\",\n  \"deduction_from_salary\": 0,\n  \"leave_type\": \"annual\",\n  \"reason\": \"Family event\",\n  \"request_date\": \"2023-06-01\",\n  \"request_time\": \"10:15:30\",\n  \"status\": \"pending\",\n  \"created_at\": \"2023-06-01T10:15:30Z\"\n}`\n      }\n    },\n    updateLeaveRequest: {\n      title: 'Update Leave Request',\n      method: 'PUT',\n      url: 'https://hrms-api.xpectrum-ai.com/hrms/api/v1/leave_requests/{application_id}',\n      badge: 'Stable',\n      breadcrumb: 'Leave',\n      queryParams: [\n        { name: 'api_key', type: 'string', required: true, example: 'Example: xpectrum_api_key_123@ai' },\n        { name: 'notify_employee', type: 'boolean', required: false, example: 'Example: true' },\n        { name: 'notify_manager', type: 'boolean', required: false, example: 'Example: true' }\n      ],\n      headerParams: [\n        { name: 'X-API-KEY', type: 'string', required: true, example: 'Example: your_api_key' },\n        { name: 'Content-Type', type: 'string', required: true, example: 'Example: application/json' },\n        { name: 'Authorization', type: 'string', required: true, example: 'Example: Bearer token' }\n      ],\n      bodyParams: [\n        { name: 'status', type: 'string', required: false, example: 'Example: approved' },\n        { name: 'reviewed_by', type: 'string', required: false, example: 'Example: EMP010' },\n        { name: 'approved_by', type: 'string', required: false, example: 'Example: EMP010' },\n        { name: 'start_date', type: 'string', required: false, example: 'Example: 2023-07-16' },\n        { name: 'end_date', type: 'string', required: false, example: 'Example: 2023-07-20' },\n        { name: 'reason', type: 'string', required: false, example: 'Example: Family emergency' }\n      ],\n      response: {\n        example: `{\n  \"application_id\": 12347,\n  \"employee_id\": \"EMP001\",\n  \"start_date\": \"2023-07-16\",\n  \"total_working_days_off\": 5,\n  \"total_days_off\": 5,\n  \"end_date\": \"2023-07-20\",\n  \"deduction_from_salary\": 0,\n  \"leave_type\": \"annual\",\n  \"reason\": \"Family emergency\",\n  \"request_date\": \"2023-06-01\",\n  \"request_time\": \"10:15:30\",\n  \"reviewed_by\": \"EMP010\",\n  \"status\": \"approved\",\n  \"approved_by\": \"EMP010\",\n  \"updated_at\": \"2023-06-02T14:20:15Z\"\n}`\n      }\n    }\n  };\n\n  const currentEndpoint = endpointData[activeEndpoint] || endpointData.getAllEmployees;\n\n  // Load real employee data from the actual API\n  const loadRealEmployeeData = () => {\n    // Set loading state immediately for better user feedback\n    setIsLoading(true);\n    \n    // Batch state resets for better performance\n    setApiError('');\n    setResponseDetails(null);\n    setApiResponse(null);\n    setIsResponseFromApi(true);\n    \n    // Get API key from current environment\n    const env = environments.find(e => e.name === activeEnvironment);\n    const currentApiKey = apiKey || (env?.variables.apiKey || '');\n    \n    // Validate API key for private endpoints\n    if (!currentApiKey && currentEndpoint.headerParams.some(p => p.name === 'X-API-KEY' && p.required)) {\n      setApiError('API key is required for this endpoint');\n      setIsLoading(false);\n      setShowTryItModal(true);\n      return;\n    }\n    \n    // Validate base URL\n    if (!apiBaseUrl) {\n      setApiError('API base URL is required');\n      setIsLoading(false);\n      setShowTryItModal(true);\n      return;\n    }\n    \n    const startTime = performance.now();\n    \n    let apiUrl = `${apiBaseUrl}`;\n    \n    // For getAllEmployees, use the specific endpoint \n    if (activeEndpoint === 'getAllEmployees') {\n      apiUrl = `${apiBaseUrl}/all_employee_data?api_key=xpectrum_api_key_123@ai`;\n    } \n    // For other endpoints, use the class name pattern\n    else {\n      // Handle insurance_plan with plan_name parameter\n      if (activeEndpoint.includes('InsurancePlan')) {\n        apiUrl += '/insurance_plan';\n        \n        // Handle path parameters\n        if (currentEndpoint.url.includes('{plan_name}')) {\n          // Use plan name for this specific endpoint type\n          const planName = requestParams.plan_name || 'Premium Health Plan';\n          apiUrl += `/${encodeURIComponent(planName)}`;\n        }\n      }\n      // Handle other endpoints that use their respective class names\n      else {\n        // Map the endpoint to the correct API path based on the class name\n        if (activeEndpoint.includes('Employee') && !activeEndpoint.includes('Insurance')) {\n          apiUrl += '/employee_data';\n        } else if (activeEndpoint.includes('Salary')) {\n          apiUrl += '/salary_info';\n        } else if (activeEndpoint.includes('Payroll')) {\n          apiUrl += '/payroll';\n        } else if (activeEndpoint.includes('Insurance') || activeEndpoint.includes('insurance')) {\n          apiUrl += '/employee_insurance_data';\n        } else if (activeEndpoint.includes('LeaveBalance')) {\n          apiUrl += '/leave_balance_data';\n        } else if (activeEndpoint.includes('LeaveRequest')) {\n          apiUrl += '/leave_requests';\n        }\n        \n        // Handle path parameters like {employee_id} or {application_id}\n        if (currentEndpoint.url.includes('{employee_id}')) {\n          apiUrl += `/${realEmployeeId}`;\n          \n          // Update request params\n          setRequestParams({\n            ...requestParams,\n            employee_id: realEmployeeId\n          });\n        } else if (currentEndpoint.url.includes('{application_id}')) {\n          const applicationId = requestParams.application_id || '12345';\n          apiUrl += `/${applicationId}`;\n        }\n      }\n    }\n    \n    // Add query parameters if any exist for this endpoint\n    if (currentEndpoint.queryParams && currentEndpoint.queryParams.length > 0) {\n      const queryParams = new URLSearchParams();\n      \n      currentEndpoint.queryParams.forEach(param => {\n        if (requestParams[param.name]) {\n          queryParams.append(param.name, requestParams[param.name]);\n        }\n      });\n      \n      const queryString = queryParams.toString();\n      if (queryString) {\n        apiUrl += `?${queryString}`;\n      }\n    }\n    \n    // Prepare request options based on HTTP method\n    const options: RequestInit = {\n      method: currentEndpoint.method,\n      headers: {\n        'Content-Type': 'application/json',\n        'X-API-KEY': currentApiKey\n      }\n    };\n    \n    // Add body for POST, PUT, PATCH methods\n    if (['POST', 'PUT', 'PATCH'].includes(currentEndpoint.method) && currentEndpoint.bodyParams) {\n      const bodyData: {[key: string]: any} = {};\n      \n      currentEndpoint.bodyParams.forEach(param => {\n        if (requestParams[param.name]) {\n          // Convert numbers to number type\n          if (param.type === 'number' || param.type === 'integer') {\n            bodyData[param.name] = Number(requestParams[param.name]);\n          } else {\n            bodyData[param.name] = requestParams[param.name];\n          }\n        }\n      });\n      \n      options.body = JSON.stringify(bodyData);\n    }\n    \n    // Open the testing modal immediately for better UX\n    setShowTryItModal(true);\n    \n    console.log(`Making ${currentEndpoint.method} request to: ${apiUrl}`);\n    \n    // Make the API call to the real endpoint\n    fetch(apiUrl, options)\n      .then(response => {\n        // Check for network errors or non-JSON responses\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        \n        const contentType = response.headers.get('content-type');\n        if (!contentType || !contentType.includes('application/json')) {\n          throw new Error('Response is not JSON');\n        }\n        \n        return {\n          response,\n          status: response.status,\n          statusText: response.statusText,\n          time: Math.round(performance.now() - startTime)\n        };\n      })\n      .then(({response, status, statusText, time}) => {\n        return response.json().then(data => ({\n          data,\n          status,\n          statusText,\n          time\n        }));\n      })\n      .then(({data, status, statusText, time}) => {\n        // Calculate response size\n        const responseSize = JSON.stringify(data).length;\n        const formattedSize = responseSize < 1024 \n          ? `${responseSize} B` \n          : `${(responseSize / 1024).toFixed(2)} KB`;\n        \n        // Set response details\n        setResponseDetails({\n          status,\n          statusText,\n          time,\n          size: formattedSize,\n          headers: {}\n        });\n        \n        // Set the response\n        setApiResponse(data);\n        setIsLoading(false);\n      })\n      .catch(error => {\n        console.error('API call error:', error);\n        const endTime = performance.now();\n        \n        setResponseDetails({\n          status: 0,\n          statusText: 'Failed',\n          time: Math.round(endTime - startTime),\n          size: '0 B'\n        });\n        \n        setApiError(error instanceof Error ? error.message : 'An error occurred during the API call');\n        setIsLoading(false);\n      });\n  };\n\n  // Add validation helper function\n  const validateEmployeeData = (data: any) => {\n    const requiredFields = ['employee_id'];\n    const missingFields = requiredFields.filter(field => !data[field]);\n    \n    if (missingFields.length > 0) {\n      throw new Error(`Missing required fields: ${missingFields.join(', ')}`);\n    }\n    \n    // Validate field types\n    if (data.job_id && typeof data.job_id !== 'number') {\n      throw new Error('job_id must be a number');\n    }\n    \n    return true;\n  };\n\n  // Single handleApiCall function with validation\n  const handleApiCall = () => {\n    setIsLoading(true);\n    setApiError('');\n    setResponseDetails(null);\n    setApiResponse(null);\n    \n    try {\n      // Validate request body for POST/PUT methods\n      if (['POST', 'PUT'].includes(currentEndpoint.method)) {\n        const bodyData = bodyType === 'raw' ? JSON.parse(rawBody) : requestParams;\n        \n        if (currentEndpoint.url.includes('employee_data')) {\n          validateEmployeeData(bodyData);\n        }\n      }\n      \n      if (!apiBaseUrl) {\n        setApiError('API base URL is required');\n        setIsLoading(false);\n        return;\n      }\n      \n      setIsResponseFromApi(true);\n      const startTime = performance.now();\n      \n      let apiUrl = `${apiBaseUrl}`;\n      \n      // Map the endpoint to the correct API path\n      if (activeEndpoint === 'getAllEmployees') {\n        apiUrl = `${apiBaseUrl}/all_employee_data`;\n      } else if (activeEndpoint.includes('Employee')) {\n        apiUrl += '/employee_data';\n      } else if (activeEndpoint.includes('Salary')) {\n        apiUrl += '/salary_info';\n      } else if (activeEndpoint.includes('Payroll')) {\n        apiUrl += '/payroll';\n      } else if (activeEndpoint.includes('Insurance')) {\n        apiUrl += '/employee_insurance_data';\n      } else if (activeEndpoint.includes('LeaveBalance')) {\n        apiUrl += '/leave_balance_data';\n      } else if (activeEndpoint.includes('LeaveRequest')) {\n        apiUrl += '/leave_requests';\n      }\n      \n      // Handle path parameters\n      if (currentEndpoint.url.includes('{employee_id}')) {\n        apiUrl += `/${requestParams.employee_id || realEmployeeId}`;\n      }\n      \n      // Add query parameters\n      const queryParams = new URLSearchParams();\n      queryParams.append('api_key', 'xpectrum_api_key_123@ai');\n      \n      if (currentEndpoint.queryParams && currentEndpoint.queryParams.length > 0) {\n        currentEndpoint.queryParams.forEach(param => {\n          if (requestParams[param.name] && param.name !== 'api_key') {\n            queryParams.append(param.name, requestParams[param.name]);\n          }\n        });\n      }\n      \n      const queryString = queryParams.toString();\n      if (queryString) {\n        apiUrl += `?${queryString}`;\n      }\n      \n      // Prepare request options\n      const options: RequestInit = {\n        method: currentEndpoint.method,\n        headers: {\n          'Content-Type': 'application/json',\n          'X-API-KEY': apiKey || (environments.find(e => e.name === activeEnvironment)?.variables.apiKey || ''),\n          ...requestHeaders\n        }\n      };\n      \n      // Handle request body for POST and PUT methods\n      if (['POST', 'PUT', 'PATCH'].includes(currentEndpoint.method)) {\n        if (bodyType === 'raw' && rawBody) {\n          try {\n            // Parse and validate the raw JSON body\n            const parsedBody = JSON.parse(rawBody);\n            options.body = JSON.stringify(parsedBody);\n          } catch (error) {\n            throw new Error('Invalid JSON in request body: ' + (error instanceof Error ? error.message : String(error)));\n          }\n        } else {\n          // Use form data if not using raw JSON\n          const bodyData: {[key: string]: any} = {};\n          if (currentEndpoint.bodyParams) {\n            currentEndpoint.bodyParams.forEach(param => {\n              // Only include parameters that have values\n              if (requestParams[param.name] !== undefined && requestParams[param.name] !== '') {\n                // Convert values to appropriate types\n                if (param.type === 'number' || param.type === 'integer') {\n                  bodyData[param.name] = Number(requestParams[param.name]);\n                } else if (param.type === 'boolean') {\n                  bodyData[param.name] = requestParams[param.name] === 'true';\n                } else if (param.type === 'object' || param.type === 'array') {\n                  // Try to parse as JSON if it's an object or array\n                  try {\n                    bodyData[param.name] = JSON.parse(requestParams[param.name]);\n                  } catch (error) {\n                    bodyData[param.name] = requestParams[param.name];\n                  }\n                } else {\n                  bodyData[param.name] = requestParams[param.name];\n                }\n              }\n            });\n          }\n          options.body = JSON.stringify(bodyData);\n        }\n      }\n      \n      console.log(`Making ${currentEndpoint.method} request to: ${apiUrl}`);\n      console.log('Request options:', options);\n      console.log('Request body:', options.body);\n      \n      // Make the API call\n      fetch(apiUrl, options)\n        .then(response => {\n          // Extract headers to display in response\n          const headers: {[key: string]: string} = {};\n          response.headers.forEach((value, key) => {\n            headers[key] = value;\n          });\n          \n          // Return response data even if status code indicates error\n          return {\n            response,\n            status: response.status,\n            statusText: response.statusText,\n            time: Math.round(performance.now() - startTime),\n            headers\n          };\n        })\n        .then(({response, status, statusText, time, headers}) => {\n          // Try to parse as JSON, but gracefully handle non-JSON responses\n          return response.text().then(text => {\n            let data;\n            try {\n              data = text && text.trim() ? JSON.parse(text) : {};\n            } catch (error) {\n              // If response is not valid JSON, use raw text\n              data = { rawResponse: text };\n            }\n            \n            return {\n            data,\n            status,\n            statusText,\n              time,\n              headers\n            };\n          });\n        })\n        .then(({data, status, statusText, time, headers}) => {\n          const responseSize = JSON.stringify(data).length;\n          const formattedSize = responseSize < 1024 \n            ? `${responseSize} B` \n            : `${(responseSize / 1024).toFixed(2)} KB`;\n          \n          setResponseDetails({\n            status,\n            statusText,\n            time,\n            size: formattedSize,\n            headers\n          });\n          \n          setApiResponse(data);\n          setIsLoading(false);\n        })\n        .catch(error => {\n          console.error('API call error:', error);\n          const endTime = performance.now();\n          \n          setResponseDetails({\n            status: 0,\n            statusText: 'Failed',\n            time: Math.round(endTime - startTime),\n            size: '0 B',\n            headers: {}\n          });\n          \n          setApiError(error instanceof Error ? error.message : 'An error occurred during the API call');\n          setIsLoading(false);\n        });\n    } catch (error) {\n      console.error('Validation error:', error);\n      setApiError(error instanceof Error ? error.message : 'Invalid request data');\n      setIsLoading(false);\n    }\n  };\n\n  // Initialize request params with example values\n  const initializeRequestParams = () => {\n    const params: {[key: string]: string} = {};\n    \n    // Add path parameter\n    if (currentEndpoint.url.includes('{employee_id}')) {\n      params.employee_id = 'EMP001';\n    }\n    \n    // Add query parameters\n    currentEndpoint.queryParams.forEach(param => {\n      if (param.example) {\n        const exampleValue = param.example.replace('Example: ', '');\n        params[param.name] = exampleValue;\n      }\n    });\n    \n    // Add body parameters\n    if (currentEndpoint.bodyParams) {\n      currentEndpoint.bodyParams.forEach(param => {\n        if (param.example) {\n          const exampleValue = param.example.replace('Example: ', '');\n          params[param.name] = exampleValue;\n        }\n      });\n      \n      // Set raw body JSON\n      const bodyObject = Object.fromEntries(\n        currentEndpoint.bodyParams.map(param => [\n          param.name,\n          param.example ? param.example.replace('Example: ', '') : ''\n        ])\n      );\n      setRawBody(JSON.stringify(bodyObject, null, 2));\n    }\n    \n    setRequestParams(params);\n  };\n\n  // Add a header\n  const addRequestHeader = (key: string, value: string) => {\n    setRequestHeaders(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n\n  // Remove a header\n  const removeRequestHeader = (key: string) => {\n    setRequestHeaders(prev => {\n      const newHeaders = { ...prev };\n      delete newHeaders[key];\n      return newHeaders;\n    });\n  };\n\n  // Open the Try It modal\n  const openTryItModal = () => {\n    initializeRequestParams();\n    setApiResponse(null);\n    setApiError('');\n    setResponseDetails(null);\n    setActiveRequestTab('params');\n    setBodyType('form');\n    \n    // Set initial headers based on current endpoint\n    const initialHeaders: {[key: string]: string} = {\n      'Content-Type': 'application/json'\n    };\n    \n    currentEndpoint.headerParams.forEach(param => {\n      if (param.name !== 'X-API-KEY') { // API key is handled separately\n        initialHeaders[param.name] = param.example ? param.example.replace('Example: ', '') : '';\n      }\n    });\n    \n    setRequestHeaders(initialHeaders);\n    \n    // Set API key from environment if available\n    const env = environments.find(e => e.name === activeEnvironment);\n    if (env && env.variables.apiKey) {\n      setApiKey(env.variables.apiKey);\n    }\n    \n    // Show modal immediately\n    setShowTryItModal(true);\n  };\n\n  // Update a single request parameter\n  const updateRequestParam = (paramName: string, value: string) => {\n    setRequestParams(prev => ({\n      ...prev,\n      [paramName]: value\n    }));\n  };\n\n  // Toggle environment modal\n  const toggleEnvironmentModal = () => {\n    setShowEnvironmentModal(!showEnvironmentModal);\n  };\n\n  // Select an environment\n  const selectEnvironment = (envName: string) => {\n    setActiveEnvironment(envName);\n    const env = environments.find(e => e.name === envName);\n    if (env && env.variables.apiKey) {\n      setApiKey(env.variables.apiKey);\n    }\n    setShowEnvironmentModal(false);\n  };\n\n  const handleCategoryClick = (category: string) => {\n    if (animating) return;\n    \n    setAnimating(true);\n    \n    // Toggle this category in the open categories list\n    setOpenCategories(prev => {\n      if (prev.includes(category)) {\n        // Only allow closing if explicitly clicking on this category\n        return prev.filter(cat => cat !== category);\n      } else {\n        // Add this category without removing others\n        return [...prev, category];\n      }\n    });\n    \n    // Add animation class\n    const categoryElement = document.querySelector(`.section-header[data-category=\"${category}\"]`);\n    if (categoryElement) {\n      categoryElement.classList.add('pulse-animation');\n      setTimeout(() => {\n        categoryElement.classList.remove('pulse-animation');\n        setAnimating(false);\n      }, 300);\n    }\n    \n    // Set default endpoint for selected category without removing other open categories\n    if (category === 'employee' && !activeEndpoint.includes('Employee')) setActiveEndpoint('getAllEmployees');\n    if (category === 'salary' && !activeEndpoint.includes('Salary')) setActiveEndpoint('getSalaryInfo');\n    if (category === 'payroll' && !activeEndpoint.includes('Payroll')) setActiveEndpoint('getPayroll');\n  };\n\n  const handleEndpointClick = (endpoint: string, event: React.MouseEvent) => {\n    // Don't trigger if clicking on the \"Try It\" button\n    if ((event.target as HTMLElement).classList.contains('try-button')) {\n      return;\n    }\n    \n    setActiveEndpoint(endpoint);\n    setApiResponse(null);\n    setResponseDetails(null);\n    setApiError('');\n    setRequestParams({});\n    setEditableUrl(''); // Reset editable URL when changing endpoints\n    \n    // Add animation flag\n    setAnimating(true);\n    setTimeout(() => {\n      setAnimating(false);\n    }, 500);\n  };\n\n  const getMethodClassName = (method: string) => {\n    method = method.toLowerCase();\n    if (method === 'get') return 'get';\n    if (method === 'post') return 'post';\n    if (method === 'put') return 'put';\n    if (method === 'delete') return 'delete';\n    if (method === 'patch') return 'patch';\n    return '';\n  };\n\n  const renderCodeSample = (language: string) => {\n    if (language === 'objective-c') {\n      return '#import <Foundation/Foundation.h>';\n    }\n    \n    if (language === 'all') {\n      return 'Select a language to see code examples';\n    }\n    \n    if (language === 'shell') {\n      return `curl --location --request ${currentEndpoint.method} '${currentEndpoint.url}' \\\\\n--header 'X-SOURCE: admin' \\\\\n--header 'X-LANG: en' \\\\\n--header 'X-REQUEST-ID: stacktics' \\\\\n--header 'X-DEVICE-ID: stacktics_device' \\\\\n--header 'x-api-key: your_api_key' \\\\\n--header 'Content-Type: application/json'${currentEndpoint.method !== 'GET' && currentEndpoint.bodyParams ? ` \\\\\n--data-raw '${JSON.stringify({\n        ...Object.fromEntries(currentEndpoint.bodyParams.map(param => [\n          param.name,\n          param.example.includes('Example: ') ? param.example.replace('Example: ', '') : ''\n        ]))\n      }, null, 2)}'` : ''}`;\n    }\n    \n    if (language === 'javascript') {\n      return `const options = {\n  method: '${currentEndpoint.method}',\n  headers: {\n    'X-SOURCE': 'admin',\n    'X-LANG': 'en',\n    'X-REQUEST-ID': 'stacktics',\n    'X-DEVICE-ID': 'stacktics_device',\n    'x-api-key': 'your_api_key',\n    'Content-Type': 'application/json'\n  }${currentEndpoint.method !== 'GET' && currentEndpoint.bodyParams ? `,\n  body: JSON.stringify(${JSON.stringify(\n    Object.fromEntries(currentEndpoint.bodyParams.map(param => [\n      param.name,\n      param.example.includes('Example: ') ? param.example.replace('Example: ', '') : ''\n    ])),\n    null, 2\n  )})` : ''}\n};\n\nfetch('${currentEndpoint.url}', options)\n  .then(response => response.json())\n  .then(data => console.log(data))\n  .catch(error => console.error('Error:', error));`;\n    }\n    \n    if (language === 'python') {\n      return `import requests\n\nurl = \"${currentEndpoint.url}\"\nheaders = {\n    \"X-SOURCE\": \"admin\",\n    \"X-LANG\": \"en\",\n    \"X-REQUEST-ID\": \"stacktics\",\n    \"X-DEVICE-ID\": \"stacktics_device\",\n    \"x-api-key\": \"your_api_key\",\n    \"Content-Type\": \"application/json\"\n}${currentEndpoint.method !== 'GET' && currentEndpoint.bodyParams ? `\n\npayload = ${JSON.stringify(\n  Object.fromEntries(currentEndpoint.bodyParams.map(param => [\n    param.name,\n    param.example.includes('Example: ') ? param.example.replace('Example: ', '') : ''\n  ])),\n  null, 2\n)}` : ''}\n\nresponse = requests.${currentEndpoint.method.toLowerCase()}(url, headers=headers${currentEndpoint.method !== 'GET' && currentEndpoint.bodyParams ? ', json=payload' : ''})\ndata = response.json()\nprint(data)`;\n    }\n    \n    return `// ${language.charAt(0).toUpperCase() + language.slice(1)} example would go here`;\n  };\n\n  // Function to copy code to clipboard\n  const copyCodeToClipboard = (code: string) => {\n    navigator.clipboard.writeText(code)\n      .then(() => {\n        setCopiedCode(true);\n        setTimeout(() => setCopiedCode(false), 2000);\n      })\n      .catch(err => {\n        console.error('Failed to copy code: ', err);\n      });\n  };\n\n  // Update the response schema component to match the example data\n  const renderResponseSchema = () => {\n    return (\n      <div className=\"response-schema\">\n        <div className=\"response-type-header\">application/json</div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">employee_id</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">required</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">first_name</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">last_name</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">email</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">phone_number</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">hire_date</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">job_title</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">job_id</div>\n          <div className=\"field-type\">integer</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n        \n        <div className=\"schema-row\">\n          <div className=\"field-key\">department</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n\n        <div className=\"schema-row\">\n          <div className=\"field-key\">status</div>\n          <div className=\"field-type\">string</div>\n          <div className=\"field-required\">optional</div>\n        </div>\n      </div>\n    );\n  };\n\n  // Update response example to match the screenshot\n  const renderResponseExample = () => {\n    if (!apiResponse) {\n    return (\n        <pre className=\"response-example-empty\">\n          {JSON.stringify(JSON.parse(currentEndpoint.response.example), null, 2)}\n      </pre>\n    );\n    }\n    \n    // Format the JSON response\n    try {\n      // Clone the apiResponse to avoid modifying the original\n      const formattedResponse = JSON.parse(JSON.stringify(apiResponse));\n      \n      // If the response has a rawResponse property (non-JSON responses), display it as text\n      if (formattedResponse.rawResponse) {\n        return (\n          <pre className=\"response-example\">\n            {formattedResponse.rawResponse}\n          </pre>\n        );\n      }\n      \n      // Format arrays for better readability\n      Object.keys(formattedResponse).forEach(key => {\n        if (Array.isArray(formattedResponse[key]) && formattedResponse[key].length > 0) {\n          // If it's a large array, limit display but show the full length\n          if (formattedResponse[key].length > 20) {\n            const totalLength = formattedResponse[key].length;\n            formattedResponse[key] = formattedResponse[key].slice(0, 20);\n            formattedResponse[key].push(`... ${totalLength - 20} more items (truncated for display)`);\n          }\n        }\n      });\n      \n      return (\n        <pre className=\"response-example\">\n          {JSON.stringify(formattedResponse, null, 2)}\n        </pre>\n      );\n    } catch (error) {\n      console.error('Error formatting response:', error);\n      return (\n        <pre className=\"response-example\">\n          {JSON.stringify(apiResponse, null, 2)}\n        </pre>\n      );\n    }\n  };\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target as Node) && \n          dropdownButtonRef.current && !dropdownButtonRef.current.contains(event.target as Node)) {\n        setDropdownOpen(false);\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  // Add custom cursor effect\n  useEffect(() => {\n    const sidebar = document.querySelector('.api-sidebar');\n    if (sidebar) {\n      sidebar.addEventListener('mousemove', (e: Event) => {\n        const mouseEvent = e as MouseEvent;\n        const cursor = document.querySelector('.custom-cursor') as HTMLElement;\n        if (!cursor) {\n          const newCursor = document.createElement('div');\n          newCursor.classList.add('custom-cursor');\n          document.body.appendChild(newCursor);\n        }\n        \n        const customCursor = document.querySelector('.custom-cursor') as HTMLElement;\n        if (customCursor) {\n          customCursor.style.left = `${mouseEvent.clientX}px`;\n          customCursor.style.top = `${mouseEvent.clientY}px`;\n          customCursor.style.opacity = '1';\n        }\n      });\n      \n      sidebar.addEventListener('mouseleave', () => {\n        const customCursor = document.querySelector('.custom-cursor') as HTMLElement;\n        if (customCursor) {\n          customCursor.style.opacity = '0';\n        }\n      });\n    }\n    \n    return () => {\n      const customCursor = document.querySelector('.custom-cursor');\n      if (customCursor) {\n        customCursor.remove();\n      }\n    };\n  }, []);\n\n  // Toggle mobile menu\n  const toggleMobileMenu = () => {\n    setMobileMenuOpen(!mobileMenuOpen);\n  };\n\n  // Close mobile menu when selecting an endpoint on mobile\n  const handleMobileEndpointClick = (endpoint: string, event: React.MouseEvent) => {\n    handleEndpointClick(endpoint, event);\n    if (window.innerWidth <= 768) {\n      setMobileMenuOpen(false);\n    }\n  };\n\n  // Toggle theme function\n  const toggleTheme = () => {\n    const newDarkMode = !darkMode;\n    setDarkMode(newDarkMode);\n    \n    // Apply theme classes to document\n    if (newDarkMode) {\n      document.documentElement.classList.add('dark-theme');\n      document.documentElement.classList.remove('light-theme');\n    } else {\n      document.documentElement.classList.add('light-theme');\n      document.documentElement.classList.remove('dark-theme');\n    }\n  };\n\n  // Apply theme class on component mount\n  useEffect(() => {\n    // Initialize with dark theme\n    document.documentElement.classList.add('dark-theme');\n  }, []);\n\n  // Add search filter function\n  const getFilteredEndpoints = (category: string) => {\n    if (!searchTerm) {\n      // If no search term, return all endpoints for this category\n      return Object.keys(endpointData).filter(key => endpointData[key].breadcrumb.toLowerCase() === category.toLowerCase());\n    }\n    \n    // Filter endpoints by search term and category\n    return Object.keys(endpointData).filter(key => {\n      const endpoint = endpointData[key];\n      return endpoint.breadcrumb.toLowerCase() === category.toLowerCase() && \n        (endpoint.title.toLowerCase().includes(searchTerm.toLowerCase()) || \n         key.toLowerCase().includes(searchTerm.toLowerCase()));\n    });\n  };\n\n  // Handle search input\n  const handleSearchChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const searchText = e.target.value;\n    setSearchTerm(searchText);\n    \n    // If search is not empty, open all categories to show search results\n    if (searchText) {\n      setOpenCategories(['employee', 'salary', 'payroll', 'insurance', 'leave']);\n    }\n  };\n\n  // Add a function to highlight search matches\n  const highlightMatch = (text: string) => {\n    if (!searchTerm || searchTerm.length < 2) return text;\n    \n    const regex = new RegExp(`(${searchTerm})`, 'gi');\n    return text.replace(regex, '<span class=\"highlight-match\">$1</span>');\n  };\n\n  // Add a global API config modal\n  const [showApiConfigModal, setShowApiConfigModal] = useState(false);\n  \n  // Add a function to toggle the API config modal\n  const toggleApiConfigModal = () => {\n    setShowApiConfigModal(!showApiConfigModal);\n  };\n  \n  // Add a function to save the API base URL\n  const saveApiBaseUrl = (url: string) => {\n    setApiBaseUrl(url);\n    setIsEditingApiConfig(false);\n    setShowApiConfigModal(false);\n  };\n\n  return (\n    <div className={`api-doc-container ${mobileMenuOpen ? 'mobile-menu-open' : ''} ${darkMode ? 'dark-theme' : 'light-theme'}`}>\n      {/* Mobile menu toggle */}\n      <div className=\"mobile-menu-toggle\" onClick={toggleMobileMenu}>\n        <div className={`hamburger ${mobileMenuOpen ? 'active' : ''}`}>\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n\n      {/* Sidebar */}\n      <aside className={`api-sidebar ${mobileMenuOpen ? 'mobile-open' : ''}`}>\n        <div className=\"api-brand\">\n          <div className=\"api-logo\">\n            <img src=\"/logo.svg\" alt=\"ai logo\" width=\"20\" height=\"20\" />\n          </div>\n          <h3 className=\"logo-text\">employee-api</h3>\n          <div className=\"api-controls\">\n            <div className=\"theme-toggle\" onClick={toggleTheme}>\n              <img src={darkMode ? \"/moon.svg\" : \"/sun.svg\"} alt={darkMode ? \"light mode\" : \"dark mode\"} width=\"16\" height=\"16\" />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"search-bar\">\n          <input \n            type=\"text\" \n            placeholder=\"Search endpoints...\" \n            value={searchTerm}\n            onChange={handleSearchChange}\n          />\n          {searchTerm && (\n            <button \n              className=\"search-clear-button\" \n              onClick={() => setSearchTerm('')}\n              aria-label=\"Clear search\"\n            >\n              ×\n            </button>\n          )}\n        </div>\n        \n        <div className=\"sidebar-section\">\n          <div \n            className={`section-header ${openCategories.includes('employee') ? 'active' : ''}`}\n            onClick={() => handleCategoryClick('employee')}\n            data-category=\"employee\"\n          >\n            <span>Employee Management</span>\n            <span className=\"chevron\">▼</span>\n          </div>\n          <ul className={`section-links ${openCategories.includes('employee') ? 'visible' : 'hidden'}`}>\n            {getFilteredEndpoints('employee').map(endpointKey => (\n              <li \n                key={endpointKey}\n                className={`section-link ${activeEndpoint === endpointKey ? 'active' : ''}`}\n                onClick={(event) => handleMobileEndpointClick(endpointKey, event)}\n                data-endpoint={endpointKey}\n              >\n                <span dangerouslySetInnerHTML={{ __html: highlightMatch(endpointData[endpointKey].title) }}></span>\n                <span className={`method-tag ${getMethodClassName(endpointData[endpointKey].method)}`}>\n                  {endpointData[endpointKey].method}\n                </span>\n              </li>\n            ))}\n            {getFilteredEndpoints('employee').length === 0 && searchTerm && (\n              <li className=\"no-results\">No matching endpoints found</li>\n            )}\n          </ul>\n        </div>\n        \n        <div className=\"sidebar-section\">\n          <div \n            className={`section-header ${openCategories.includes('salary') ? 'active' : ''}`}\n            onClick={() => handleCategoryClick('salary')}\n            data-category=\"salary\"\n          >\n            <span>Salary Management</span>\n            <span className=\"chevron\">▼</span>\n          </div>\n          <ul className={`section-links ${openCategories.includes('salary') ? 'visible' : 'hidden'}`}>\n            {getFilteredEndpoints('salary').map(endpointKey => (\n              <li \n                key={endpointKey}\n                className={`section-link ${activeEndpoint === endpointKey ? 'active' : ''}`}\n                onClick={(event) => handleMobileEndpointClick(endpointKey, event)}\n                data-endpoint={endpointKey}\n              >\n                <span dangerouslySetInnerHTML={{ __html: highlightMatch(endpointData[endpointKey].title) }}></span>\n                <span className={`method-tag ${getMethodClassName(endpointData[endpointKey].method)}`}>\n                  {endpointData[endpointKey].method}\n                </span>\n              </li>\n            ))}\n            {getFilteredEndpoints('salary').length === 0 && searchTerm && (\n              <li className=\"no-results\">No matching endpoints found</li>\n            )}\n          </ul>\n        </div>\n        \n        <div className=\"sidebar-section\">\n          <div \n            className={`section-header ${openCategories.includes('payroll') ? 'active' : ''}`}\n            onClick={() => handleCategoryClick('payroll')}\n            data-category=\"payroll\"\n          >\n            <span>Payroll Management</span>\n            <span className=\"chevron\">▼</span>\n          </div>\n          <ul className={`section-links ${openCategories.includes('payroll') ? 'visible' : 'hidden'}`}>\n            {getFilteredEndpoints('payroll').map(endpointKey => (\n              <li \n                key={endpointKey}\n                className={`section-link ${activeEndpoint === endpointKey ? 'active' : ''}`}\n                onClick={(event) => handleMobileEndpointClick(endpointKey, event)}\n                data-endpoint={endpointKey}\n              >\n                <span dangerouslySetInnerHTML={{ __html: highlightMatch(endpointData[endpointKey].title) }}></span>\n                <span className={`method-tag ${getMethodClassName(endpointData[endpointKey].method)}`}>\n                  {endpointData[endpointKey].method}\n                </span>\n              </li>\n            ))}\n            {getFilteredEndpoints('payroll').length === 0 && searchTerm && (\n              <li className=\"no-results\">No matching endpoints found</li>\n            )}\n          </ul>\n        </div>\n        \n        <div className=\"sidebar-section\">\n          <div \n            className={`section-header ${openCategories.includes('insurance') ? 'active' : ''}`}\n            onClick={() => handleCategoryClick('insurance')}\n            data-category=\"insurance\"\n          >\n            <span>Insurance Management</span>\n            <span className=\"chevron\">▼</span>\n          </div>\n          <ul className={`section-links ${openCategories.includes('insurance') ? 'visible' : 'hidden'}`}>\n            {getFilteredEndpoints('insurance').map(endpointKey => (\n              <li \n                key={endpointKey}\n                className={`section-link ${activeEndpoint === endpointKey ? 'active' : ''}`}\n                onClick={(event) => handleMobileEndpointClick(endpointKey, event)}\n                data-endpoint={endpointKey}\n              >\n                <span dangerouslySetInnerHTML={{ __html: highlightMatch(endpointData[endpointKey].title) }}></span>\n                <span className={`method-tag ${getMethodClassName(endpointData[endpointKey].method)}`}>\n                  {endpointData[endpointKey].method}\n                </span>\n              </li>\n            ))}\n            {getFilteredEndpoints('insurance').length === 0 && searchTerm && (\n              <li className=\"no-results\">No matching endpoints found</li>\n            )}\n          </ul>\n        </div>\n        \n        <div className=\"sidebar-section\">\n          <div \n            className={`section-header ${openCategories.includes('leave') ? 'active' : ''}`}\n            onClick={() => handleCategoryClick('leave')}\n            data-category=\"leave\"\n          >\n            <span>Leave Management</span>\n            <span className=\"chevron\">▼</span>\n          </div>\n          <ul className={`section-links ${openCategories.includes('leave') ? 'visible' : 'hidden'}`}>\n            {getFilteredEndpoints('leave').map(endpointKey => (\n              <li \n                key={endpointKey}\n                className={`section-link ${activeEndpoint === endpointKey ? 'active' : ''}`}\n                onClick={(event) => handleMobileEndpointClick(endpointKey, event)}\n                data-endpoint={endpointKey}\n              >\n                <span dangerouslySetInnerHTML={{ __html: highlightMatch(endpointData[endpointKey].title) }}></span>\n                <span className={`method-tag ${getMethodClassName(endpointData[endpointKey].method)}`}>\n                  {endpointData[endpointKey].method}\n                </span>\n              </li>\n            ))}\n            {getFilteredEndpoints('leave').length === 0 && searchTerm && (\n              <li className=\"no-results\">No matching endpoints found</li>\n            )}\n          </ul>\n        </div>\n      </aside>\n\n      {/* Overlay for mobile menu */}\n      <div \n        className={`mobile-overlay ${mobileMenuOpen ? 'active' : ''}`} \n        onClick={toggleMobileMenu}\n      ></div>\n\n      {/* Main Content */}\n      <main className=\"api-content\">\n        <div className=\"api-header animate-fadeIn\">\n          <div className=\"api-breadcrumb\">{currentEndpoint.breadcrumb}</div>\n          <h1 className=\"api-title\">\n            {currentEndpoint.title} <span className=\"api-badge\">{currentEndpoint.badge}</span>\n          </h1>\n        </div>\n\n        <div className=\"api-endpoint animate-slideIn\">\n          <div className={`endpoint-method ${getMethodClassName(currentEndpoint.method)}`}>\n            {currentEndpoint.method}\n          </div>\n          <div className=\"endpoint-url\">{currentEndpoint.url}</div>\n          <div className=\"endpoint-actions\">\n            <button \n              className=\"try-api-button\" \n              onClick={() => {\n                // Start loading immediately\n                setIsLoading(true);\n                // Show modal immediately\n                setShowTryItModal(true);\n                // Handle API call with slight delay to allow UI to update\n                setTimeout(loadRealEmployeeData, 10);\n              }}\n            >\n              Use API\n            </button>\n          </div>\n        </div>\n\n        <div className=\"api-section\">\n          <h2 className=\"section-title\">Request</h2>\n          \n          {currentEndpoint.queryParams && currentEndpoint.queryParams.length > 0 && (\n            <div className=\"params-section\">\n              <h3 className=\"params-title\">Query Params</h3>\n              \n              <div className=\"params-table\">\n                <div className=\"params-table-header\">\n                  <div className=\"param-col name\">Parameter</div>\n                  <div className=\"param-col type\">Type</div>\n                  <div className=\"param-col required\">Required</div>\n                </div>\n                \n                {currentEndpoint.queryParams.map((param, index) => (\n                  <div className=\"params-table-row\" key={index}>\n                    <div className=\"param-col name\">\n                      <span className=\"param-name\">{param.name}</span>\n                    </div>\n                    <div className=\"param-col type\">\n                      <span className=\"param-type\">{param.type}</span>\n                    </div>\n                    <div className=\"param-col required\">\n                      <span className=\"param-required\">{param.required ? 'required' : 'optional'}</span>\n                    </div>\n                    <div className=\"param-example-row\">\n                      <div className=\"param-example\">{param.example}</div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {currentEndpoint.headerParams && currentEndpoint.headerParams.length > 0 && (\n            <div className=\"params-section\">\n              <h3 className=\"params-title\">Header Params</h3>\n              <div className=\"generate-code-link\">\n                <span>Generate Code</span>\n              </div>\n              \n              <div className=\"params-table\">\n                <div className=\"params-table-header\">\n                  <div className=\"param-col name\">Parameter</div>\n                  <div className=\"param-col type\">Type</div>\n                  <div className=\"param-col required\">Required</div>\n                </div>\n                \n                {currentEndpoint.headerParams.map((param, index) => (\n                  <div className=\"params-table-row\" key={index}>\n                    <div className=\"param-col name\">\n                      <span className=\"param-name\">{param.name}</span>\n                      <div className=\"param-description\">\n                        {param.description || param.example.replace('Example: ', '')}\n                      </div>\n                    </div>\n                    <div className=\"param-col type\">\n                      <span className=\"param-type\">{param.type}</span>\n                    </div>\n                    <div className=\"param-col required\">\n                      <span className={`param-required ${param.required ? 'yes' : 'no'}`}>\n                        {param.required ? 'required' : 'optional'}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n          \n          {currentEndpoint.bodyParams && currentEndpoint.bodyParams.length > 0 && (\n            <div className=\"params-section\">\n              <h3 className=\"params-title\">Body Params</h3>\n              \n              <div className=\"params-table\">\n                <div className=\"params-table-header\">\n                  <div className=\"param-col name\">Parameter</div>\n                  <div className=\"param-col type\">Type</div>\n                  <div className=\"param-col required\">Required</div>\n                </div>\n                \n                {currentEndpoint.bodyParams.map((param, index) => (\n                  <div className=\"params-table-row\" key={index}>\n                    <div className=\"param-col name\">\n                      <span className=\"param-name\">{param.name}</span>\n                      <div className=\"param-description\">\n                        {param.description || param.example.replace('Example: ', '')}\n                      </div>\n                    </div>\n                    <div className=\"param-col type\">\n                      <span className=\"param-type\">{param.type}</span>\n                    </div>\n                    <div className=\"param-col required\">\n                      <span className={`param-required ${param.required ? 'yes' : 'no'}`}>\n                        {param.required ? 'required' : 'optional'}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"api-section\">\n          <h2 className=\"section-title\">Request samples</h2>\n          \n          <div className=\"language-tabs-container\">\n            <div className=\"language-tabs\">\n              <button \n                className={`language-tab all-tab ${activeTab === 'all' ? 'active' : ''}`}\n                onClick={() => setActiveTab('all')}\n              >\n                <div className=\"language-icon all-icon\">]</div>\n                <span>all</span>\n              </button>\n              <button \n                className={`language-tab javascript-tab ${activeTab === 'javascript' ? 'active' : ''}`}\n                onClick={() => setActiveTab('javascript')}\n              >\n                <div className=\"language-icon js-icon\">JS</div>\n                <span>JavaScript</span>\n              </button>\n              <button \n                className={`language-tab java-tab ${activeTab === 'java' ? 'active' : ''}`}\n                onClick={() => setActiveTab('java')}\n              >\n                <div className=\"language-icon java-icon\">J</div>\n                <span>Java</span>\n              </button>\n              <button \n                className={`language-tab swift-tab ${activeTab === 'swift' ? 'active' : ''}`}\n                onClick={() => setActiveTab('swift')}\n              >\n                <div className=\"language-icon swift-icon\">S</div>\n                <span>Swift</span>\n              </button>\n              <button \n                className={`language-tab go-tab ${activeTab === 'go' ? 'active' : ''}`}\n                onClick={() => setActiveTab('go')}\n              >\n                <div className=\"language-icon go-icon\">Go</div>\n                <span>Go</span>\n              </button>\n              <button \n                className={`language-tab php-tab ${activeTab === 'php' ? 'active' : ''}`}\n                onClick={() => setActiveTab('php')}\n              >\n                <div className=\"language-icon php-icon\">P</div>\n                <span>PHP</span>\n              </button>\n              <button \n                className={`language-tab python-tab ${activeTab === 'python' ? 'active' : ''}`}\n                onClick={() => setActiveTab('python')}\n              >\n                <div className=\"language-icon python-icon\">Py</div>\n                <span>Python</span>\n              </button>\n              <button \n                className={`language-tab http-tab ${activeTab === 'http' ? 'active' : ''}`}\n                onClick={() => setActiveTab('http')}\n              >\n                <div className=\"language-icon http-icon\">{'{}'}</div>\n                <span>HTTP</span>\n              </button>\n              <button \n                className={`language-tab c-tab ${activeTab === 'c' ? 'active' : ''}`}\n                onClick={() => setActiveTab('c')}\n              >\n                <div className=\"language-icon c-icon\">C</div>\n                <span>C</span>\n              </button>\n              <button \n                className={`language-tab csharp-tab ${activeTab === 'csharp' ? 'active' : ''}`}\n                onClick={() => setActiveTab('csharp')}\n              >\n                <div className=\"language-icon csharp-icon\">C#</div>\n                <span>C#</span>\n              </button>\n              <button \n                className={`language-tab objective-c-tab ${activeTab === 'objective-c' ? 'active' : ''}`}\n                onClick={() => setActiveTab('objective-c')}\n              >\n                <div className=\"language-icon objc-icon\">[C]</div>\n                <span>Objective-C</span>\n              </button>\n              <button \n                className={`language-tab ruby-tab ${activeTab === 'ruby' ? 'active' : ''}`}\n                onClick={() => setActiveTab('ruby')}\n              >\n                <div className=\"language-icon ruby-icon\">R</div>\n                <span>Ruby</span>\n              </button>\n              <button \n                className={`language-tab ocaml-tab ${activeTab === 'ocaml' ? 'active' : ''}`}\n                onClick={() => setActiveTab('ocaml')}\n              >\n                <div className=\"language-icon ocaml-icon\">ML</div>\n                <span>OCaml</span>\n              </button>\n            </div>\n          </div>\n          \n          <div className=\"code-sample\">\n            <button \n              className={`copy-button ${copiedCode ? 'copied' : ''}`} \n              onClick={() => copyCodeToClipboard(renderCodeSample(activeTab))}\n            >\n              {copiedCode ? 'Copied!' : 'Copy'}\n            </button>\n            <pre className=\"code-block\">\n              {renderCodeSample(activeTab)}\n            </pre>\n          </div>\n        </div>\n\n        <div className=\"api-section\">\n          <h2 className=\"section-title\">Responses</h2>\n          \n          <div className=\"response-item success\">\n            <div className=\"response-header\" onClick={() => setResponseOpen(!responseOpen)}>\n              <div className=\"response-status\">\n                <div className=\"status-circle success\"></div>\n                <span className=\"status-code\">200</span>\n                <span className=\"status-text\">Success</span>\n              </div>\n              <div className=\"response-toggle\">{responseOpen ? '▼' : '▶'}</div>\n            </div>\n            \n            {responseOpen && (\n              <div className=\"response-content\">\n                <div className=\"response-type\">application/json</div>\n                \n                <div className=\"response-columns\">\n                  <div className=\"response-left-column\">\n                    {renderResponseSchema()}\n                  </div>\n                  <div className=\"response-right-column\">\n                    <div className=\"example-header\">Example</div>\n                    {renderResponseExample()}\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Try It Modal */}\n        {showTryItModal && (\n          <div className=\"try-it-modal-overlay\">\n            <div className=\"try-it-modal\">\n              <div className=\"try-it-modal-header\">\n                <div className=\"try-it-title-section\">\n                  <span className={`endpoint-method ${getMethodClassName(currentEndpoint.method)}`}>\n                    {currentEndpoint.method}\n                  </span>\n                  <div className=\"d-flex align-items-center\">\n                    <h2>{activeEndpoint === 'getEmployeeById' && (apiBaseUrl || isResponseFromApi) ? 'Get Employee Data' : currentEndpoint.title}</h2>\n                    {isResponseFromApi && (\n                      <span className=\"ms-2 badge\" style={{ \n                        fontSize: '0.7rem', \n                        padding: '0.35em 0.65em', \n                        backgroundColor: 'rgba(0, 180, 60, 0.8)', \n                        color: 'white',\n                        borderRadius: '4px'\n                      }}>\n                        API\n                      </span>\n                    )}\n                  </div>\n                </div>\n                <div className=\"try-it-controls\">\n                  <button \n                    className=\"environment-selector\" \n                    onClick={toggleEnvironmentModal}\n                  >\n                    {activeEnvironment} <span className=\"dropdown-arrow\">▼</span>\n                  </button>\n                  <button \n                    className=\"try-it-modal-close\" \n                    onClick={() => setShowTryItModal(false)}\n                  >\n                    &times;\n                  </button>\n                </div>\n              </div>\n              \n              <div className=\"try-it-url-bar\">\n                <span className={`method-badge ${getMethodClassName(currentEndpoint.method)}`}>\n                  {currentEndpoint.method}\n                </span>\n                {isEditingUrl ? (\n                  <div className=\"url-input-container\">\n                    <input\n                      type=\"text\"\n                      className=\"url-input\"\n                      value={editableUrl}\n                      onChange={(e) => setEditableUrl(e.target.value)}\n                      onBlur={() => setIsEditingUrl(false)}\n                      onKeyDown={(e) => {\n                        if (e.key === 'Enter') {\n                          setIsEditingUrl(false);\n                        } else if (e.key === 'Escape') {\n                          setEditableUrl('');\n                          setIsEditingUrl(false);\n                        }\n                      }}\n                      autoFocus\n                    />\n                    <button \n                      className=\"url-reset-button\"\n                      onClick={(e) => {\n                        e.preventDefault();\n                        e.stopPropagation();\n                        \n                        // Construct the default URL\n                        const defaultUrl = (() => {\n                          let apiUrl = `${apiBaseUrl}`;\n                          \n                          // Map the endpoint to the correct API path\n                          if (activeEndpoint.includes('Employee')) {\n                            apiUrl += '/employee_data';\n                          } else if (activeEndpoint.includes('Salary')) {\n                            apiUrl += '/salary_data';\n                          } else if (activeEndpoint.includes('Payroll')) {\n                            apiUrl += '/payroll_data';\n                          }\n                          \n                          // Handle path parameters like {employee_id}\n                          if (currentEndpoint.url.includes('{employee_id}')) {\n                            apiUrl += `/${requestParams.employee_id || realEmployeeId}`;\n                          }\n                          \n                          // Add query parameters if any exist for this endpoint\n                          if (currentEndpoint.queryParams && currentEndpoint.queryParams.length > 0) {\n                            const queryParams = new URLSearchParams();\n                            \n                            currentEndpoint.queryParams.forEach(param => {\n                              if (requestParams[param.name]) {\n                                queryParams.append(param.name, requestParams[param.name]);\n                              }\n                            });\n                            \n                            const queryString = queryParams.toString();\n                            if (queryString) {\n                              apiUrl += `?${queryString}`;\n                            }\n                          }\n                          \n                          return apiUrl;\n                        })();\n                        \n                        setEditableUrl(defaultUrl);\n                      }}\n                      title=\"Reset to default URL\"\n                    >\n                      ↺\n                    </button>\n                  </div>\n                ) : (\n                  <div \n                    className=\"url-display\"\n                    onClick={() => {\n                      // Initialize editable URL with current display URL value\n                      const currentUrl = isResponseFromApi ? \n                        (() => {\n                          // Construct the display URL for the API\n                          let apiUrl = `${apiBaseUrl}`;\n                          \n                          // Map the endpoint to the correct API path\n                          if (activeEndpoint.includes('Employee')) {\n                            apiUrl += '/employee_data';\n                          } else if (activeEndpoint.includes('Salary')) {\n                            apiUrl += '/salary_data';\n                          } else if (activeEndpoint.includes('Payroll')) {\n                            apiUrl += '/payroll_data';\n                          }\n                          \n                          // Handle path parameters like {employee_id}\n                          if (currentEndpoint.url.includes('{employee_id}')) {\n                            apiUrl += `/${requestParams.employee_id || realEmployeeId}`;\n                          }\n                          \n                          // Add query parameters if any exist for this endpoint\n                          if (currentEndpoint.queryParams && currentEndpoint.queryParams.length > 0) {\n                            const queryParams = new URLSearchParams();\n                            \n                            currentEndpoint.queryParams.forEach(param => {\n                              if (requestParams[param.name]) {\n                                queryParams.append(param.name, requestParams[param.name]);\n                              }\n                            });\n                            \n                            const queryString = queryParams.toString();\n                            if (queryString) {\n                              apiUrl += `?${queryString}`;\n                            }\n                          }\n                          \n                          return apiUrl;\n                        })()\n                        : (currentEndpoint.url.includes('{employee_id}')\n                          ? currentEndpoint.url.replace('{employee_id}', requestParams.employee_id || '{employee_id}')\n                          : currentEndpoint.url);\n                      \n                      setEditableUrl(currentUrl);\n                      setIsEditingUrl(true);\n                    }}\n                    title=\"Click to edit URL\"\n                  >\n                    {isResponseFromApi ? \n                      (() => {\n                        // Construct the display URL for the API\n                        let apiUrl = `${apiBaseUrl}`;\n                        \n                        // Map the endpoint to the correct API path\n                        if (activeEndpoint.includes('Employee')) {\n                          apiUrl += '/employee_data';\n                        } else if (activeEndpoint.includes('Salary')) {\n                          apiUrl += '/salary_data';\n                        } else if (activeEndpoint.includes('Payroll')) {\n                          apiUrl += '/payroll_data';\n                        }\n                        \n                        // Handle path parameters like {employee_id}\n                        if (currentEndpoint.url.includes('{employee_id}')) {\n                          apiUrl += `/${requestParams.employee_id || realEmployeeId}`;\n                          \n                          // Update request params\n                          if (!requestParams.employee_id && realEmployeeId) {\n                            setTimeout(() => {\n                              updateRequestParam('employee_id', realEmployeeId);\n                            }, 0);\n                          }\n                        }\n                        \n                        // Add query parameters if any exist for this endpoint\n                        if (currentEndpoint.queryParams && currentEndpoint.queryParams.length > 0) {\n                          const queryParams = new URLSearchParams();\n                          \n                          currentEndpoint.queryParams.forEach(param => {\n                            if (requestParams[param.name]) {\n                              queryParams.append(param.name, requestParams[param.name]);\n                            }\n                          });\n                          \n                          const queryString = queryParams.toString();\n                          if (queryString) {\n                            apiUrl += `?${queryString}`;\n                          }\n                        }\n                        \n                        return apiUrl;\n                      })()\n                      : (currentEndpoint.url.includes('{employee_id}')\n                        ? currentEndpoint.url.replace('{employee_id}', requestParams.employee_id || '{employee_id}')\n                        : currentEndpoint.url)\n                    }\n                  </div>\n                )}\n                <button \n                  className={`send-request-button ${isLoading ? 'loading' : ''}`} \n                  onClick={handleApiCall}\n                  disabled={isLoading}\n                >\n                  {isLoading ? (\n                    <>\n                      <div className=\"button-spinner\"></div>\n                      <span>Sending...</span>\n                    </>\n                  ) : 'Send'}\n                </button>\n              </div>\n              \n              <div className=\"try-it-tabs\" style={{ display: 'none' }}>\n                <button \n                  className={`try-it-tab ${activeRequestTab === 'params' ? 'active' : ''}`}\n                  onClick={() => setActiveRequestTab('params')}\n                >\n                  Params\n                </button>\n                <button \n                  className={`try-it-tab ${activeRequestTab === 'headers' ? 'active' : ''}`}\n                  onClick={() => setActiveRequestTab('headers')}\n                >\n                  Headers\n                </button>\n                {['POST', 'PUT', 'PATCH'].includes(currentEndpoint.method) && (\n                  <button \n                    className={`try-it-tab ${activeRequestTab === 'body' ? 'active' : ''}`}\n                    onClick={() => setActiveRequestTab('body')}\n                  >\n                    Body\n                  </button>\n                )}\n                <button \n                  className={`try-it-tab ${activeRequestTab === 'auth' ? 'active' : ''}`}\n                  onClick={() => setActiveRequestTab('auth')}\n                >\n                  Authorization\n                </button>\n              </div>\n              \n              <div className=\"try-it-modal-content\">\n                <div className=\"api-base-url-container\">\n                  <div className=\"api-base-url-label\">API Base URL:</div>\n                  <div className=\"api-base-url-value\">\n                    <input \n                      type=\"text\" \n                      className=\"api-base-url-input\" \n                      value={apiBaseUrl} \n                      onChange={(e) => setApiBaseUrl(e.target.value)}\n                      placeholder=\"Enter API base URL\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"request-tabs\">\n                  <div\n                    className={`request-tab ${activeRequestTab === 'params' ? 'active' : ''}`}\n                    onClick={() => setActiveRequestTab('params')}\n                  >\n                    <span>Params</span>\n                  </div>\n                  <div\n                    className={`request-tab ${activeRequestTab === 'headers' ? 'active' : ''}`}\n                    onClick={() => setActiveRequestTab('headers')}\n                  >\n                    <span>Headers</span>\n                  </div>\n                  {['POST', 'PUT', 'PATCH'].includes(currentEndpoint.method) && (\n                    <div\n                      className={`request-tab ${activeRequestTab === 'body' ? 'active' : ''}`}\n                      onClick={() => setActiveRequestTab('body')}\n                    >\n                      <span>Body</span>\n                    </div>\n                  )}\n                  <div\n                    className={`request-tab ${activeRequestTab === 'auth' ? 'active' : ''}`}\n                    onClick={() => setActiveRequestTab('auth')}\n                  >\n                    <span>Authorization</span>\n                  </div>\n                </div>\n\n                {/* Add styles for the request tabs */}\n                <style>\n                {`\n                  .request-tabs {\n                    display: flex;\n                    gap: 2px;\n                    margin-bottom: 16px;\n                    border-bottom: 1px solid var(--border-color);\n                    background: var(--background-secondary);\n                    padding: 4px;\n                    border-radius: 4px;\n                  }\n\n                  .request-tab {\n                    padding: 8px 16px;\n                    cursor: pointer;\n                    border-radius: 4px 4px 0 0;\n                    font-size: 0.9rem;\n                    color: var(--text-secondary);\n                    transition: all 0.2s ease;\n                    position: relative;\n                    border-bottom: 3px solid transparent;\n                    margin-bottom: -1px;\n                  }\n\n                  @keyframes tabActivate {\n                    0% { transform: translateY(2px); opacity: 0.7; }\n                    100% { transform: translateY(0); opacity: 1; }\n                  }\n\n                  .request-tab:hover {\n                    background: var(--background-tertiary);\n                    color: var(--text-primary);\n                  }\n\n                  .request-tab.active {\n                    background: var(--background-tertiary);\n                    color: var(--accent-color);\n                    font-weight: 600;\n                    box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.1);\n                    animation: tabActivate 0.3s ease forwards;\n                  }\n                  \n                  .request-tab.active::after {\n                    content: '';\n                    position: absolute;\n                    bottom: -3px;\n                    left: 0;\n                    width: 100%;\n                    height: 3px;\n                    background-color: var(--accent-color);\n                    border-radius: 3px 3px 0 0;\n                  }\n                  \n                  .light-theme .request-tab {\n                    color: var(--text-muted);\n                  }\n                  \n                  .light-theme .request-tab:hover {\n                    background: rgba(0, 0, 0, 0.05);\n                    color: var(--text-color);\n                  }\n                  \n                  .light-theme .request-tab.active {\n                    background: rgba(0, 0, 0, 0.03);\n                    color: var(--primary-purple);\n                    box-shadow: 0 -2px 8px rgba(0, 0, 0, 0.03);\n                  }\n                  \n                  .light-theme .request-tab.active::after {\n                    background-color: var(--primary-purple);\n                  }\n                  \n                  .request-tab-content {\n                    animation: fadeIn 0.3s ease;\n                  }\n\n                  .try-it-section {\n                    padding: 16px;\n                    background: var(--background-primary);\n                    border-radius: 4px;\n                    margin-bottom: 16px;\n                  }\n\n                  .body-type-selector {\n                    display: flex;\n                    gap: 8px;\n                    margin-bottom: 16px;\n                  }\n\n                  .body-type-btn {\n                    padding: 6px 12px;\n                    border: 1px solid var(--border-color);\n                    background: var(--background-secondary);\n                    color: var(--text-primary);\n                    border-radius: 4px;\n                    cursor: pointer;\n                    font-size: 0.9rem;\n                  }\n\n                  .body-type-btn.active {\n                    background: var(--accent-color);\n                    color: white;\n                    border-color: var(--accent-color);\n                  }\n\n                  .raw-body-section {\n                    border: 1px solid var(--border-color);\n                    border-radius: 4px;\n                    overflow: hidden;\n                  }\n\n                  .raw-body-header {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    padding: 8px 12px;\n                    background: var(--background-secondary);\n                    border-bottom: 1px solid var(--border-color);\n                  }\n\n                  .format-json-btn {\n                    padding: 4px 8px;\n                    background: var(--accent-color);\n                    color: white;\n                    border: none;\n                    border-radius: 4px;\n                    font-size: 0.8rem;\n                    cursor: pointer;\n                  }\n\n                  .raw-body-editor {\n                    width: 100%;\n                    min-height: 300px;\n                    padding: 12px;\n                    background: var(--background-primary);\n                    color: var(--text-primary);\n                    border: none;\n                    font-family: monospace;\n                    font-size: 0.9rem;\n                    line-height: 1.5;\n                    resize: vertical;\n                  }\n\n                  .raw-body-editor:focus {\n                    outline: none;\n                  }\n                `}\n                </style>\n\n                {activeRequestTab === 'params' && (\n                  <div className=\"request-tab-content\">\n                    {/* Add API URL config at the top of params tab */}\n                    <div className=\"api-config-summary\">\n                      <div className=\"api-config-row\">\n                        <span className=\"api-config-label\">API Base URL:</span>\n                        <span className=\"api-config-value\">{apiBaseUrl || 'Not configured'}</span>\n                        <button \n                          className=\"small-config-button\"\n                          onClick={toggleApiConfigModal}\n                        >\n                          Edit\n                        </button>\n                      </div>\n                    </div>\n                    \n                    {activeEndpoint === 'getEmployeeById' && apiBaseUrl && (\n                      <div className=\"api-config-card\">\n                        <div className=\"api-config-header\">\n                          <h3>API Configuration</h3>\n                          <div className=\"api-badge\">LIVE</div>\n                        </div>\n                        \n                        <div className=\"config-field-container\">\n                          <label className=\"config-field-label\">\n                            API Base URL\n                          </label>\n                          {isEditingApiConfig ? (\n                            <div className=\"config-input-group\">\n                              <input\n                                type=\"text\"\n                                className=\"config-input\"\n                                value={apiBaseUrl}\n                                onChange={(e) => setApiBaseUrl(e.target.value)}\n                                placeholder=\"Enter API base URL (e.g., https://hrms-api.xpectrum-ai.com/hrms/api/v1)\"\n                              />\n                              <button\n                                className=\"config-edit-btn save\"\n                                onClick={() => setIsEditingApiConfig(false)}\n                              >\n                                Save\n                              </button>\n                            </div>\n                          ) : (\n                            <div className=\"config-input-group\">\n                              <input\n                                type=\"text\"\n                                className=\"config-input\"\n                                value={apiBaseUrl}\n                                disabled\n                              />\n                              <button\n                                className=\"config-edit-btn\"\n                                onClick={() => setIsEditingApiConfig(true)}\n                              >\n                                Edit\n                              </button>\n                            </div>\n                          )}\n                          <p className=\"config-description\">\n                            Base URL for the API endpoint (without trailing slash)\n                          </p>\n                        </div>\n                        \n                        <div className=\"config-field-container\">\n                          <label className=\"config-field-label\">Employee ID</label>\n                          <div className=\"config-input-group\">\n                            <input\n                              type=\"text\"\n                              className=\"config-input\"\n                              value={realEmployeeId}\n                              onChange={(e) => setRealEmployeeId(e.target.value)}\n                              placeholder=\"Enter employee ID (e.g., EM37938)\"\n                            />\n                          </div>\n                          <p className=\"config-description\">\n                            The unique identifier for the employee record to retrieve\n                          </p>\n                        </div>\n\n                        <div className=\"config-action-container\">\n                          <button \n                            className=\"test-api-button\"\n                            onClick={() => {\n                              // Start loading immediately\n                              setIsLoading(true);\n                              // Handle API call with slight delay to allow UI to update\n                              setTimeout(loadRealEmployeeData, 10);\n                            }}\n                          >\n                            <span className=\"test-icon\">⟳</span>\n                            Test API\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {currentEndpoint.url.includes('{employee_id}') && (\n                      <div className=\"path-params-section\">\n                        <h3>Path Parameters</h3>\n                        <div className=\"try-it-form-group\">\n                          <label htmlFor=\"employee-id\">employee_id</label>\n                          <input\n                            type=\"text\"\n                            id=\"employee-id\"\n                            value={activeEndpoint === 'getEmployeeById' && apiBaseUrl ? realEmployeeId : (requestParams.employee_id || '')}\n                            onChange={(e) => {\n                              if (activeEndpoint === 'getEmployeeById' && apiBaseUrl) {\n                                setRealEmployeeId(e.target.value);\n                              }\n                              updateRequestParam('employee_id', e.target.value);\n                            }}\n                            placeholder=\"Enter employee ID (e.g. EMP001)\"\n                          />\n                          <div className=\"param-description\">\n                            {activeEndpoint === 'getEmployeeById' && apiBaseUrl \n                              ? \"Employee ID from the API (e.g. EM37938)\" \n                              : \"Required path parameter for identifying the employee\"}\n                          </div>\n                        </div>\n                      </div>\n                    )}\n                    \n                    {currentEndpoint.queryParams.length > 0 && (\n                      <div className=\"query-params-section\">\n                        <h3>Query Parameters</h3>\n                        {currentEndpoint.queryParams.map((param, index) => (\n                          <div className=\"try-it-form-group\" key={index}>\n                            <div className=\"param-header\">\n                              <label htmlFor={`param-${param.name}`}>\n                                {param.name}\n                              </label>\n                              {param.required && <span className=\"required-badge\">required</span>}\n                            </div>\n                            <input\n                              type={param.type === 'integer' || param.type === 'number' ? 'number' : 'text'}\n                              id={`param-${param.name}`}\n                              value={requestParams[param.name] || ''}\n                              onChange={(e) => updateRequestParam(param.name, e.target.value)}\n                              placeholder={param.example ? `Enter ${param.name} (${param.example.replace('Example: ', '')})` : `Enter ${param.name}`}\n                            />\n                            <div className=\"param-description\">{param.description || `${param.type} - Optional query parameter`}</div>\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n                \n                {activeRequestTab === 'headers' && (\n                  <div className=\"try-it-section\">\n                    <h3>HTTP Headers</h3>\n                    <div className=\"param-description\">Headers are sent with every request to authenticate and provide additional context.</div>\n                    <div className=\"headers-table\">\n                      <div className=\"headers-row header\">\n                        <div className=\"header-key\">Key</div>\n                        <div className=\"header-value\">Value</div>\n                        <div className=\"header-actions\"></div>\n                      </div>\n                      \n                      {Object.entries(requestHeaders).map(([key, value], index) => (\n                        <div className=\"headers-row\" key={index}>\n                          <div className=\"header-key\">\n                            <input \n                              type=\"text\" \n                              value={key} \n                              onChange={(e) => {\n                                const newKey = e.target.value;\n                                const headers = { ...requestHeaders };\n                                delete headers[key];\n                                headers[newKey] = value;\n                                setRequestHeaders(headers);\n                              }}\n                              placeholder=\"Header name\"\n                            />\n                          </div>\n                          <div className=\"header-value\">\n                            <input \n                              type=\"text\" \n                              value={value} \n                              onChange={(e) => addRequestHeader(key, e.target.value)}\n                              placeholder=\"Header value\"\n                            />\n                          </div>\n                          <div className=\"header-actions\">\n                            <button \n                              className=\"remove-header-btn\" \n                              onClick={() => removeRequestHeader(key)}\n                            >\n                              Remove\n                            </button>\n                          </div>\n                        </div>\n                      ))}\n                      \n                      <div className=\"add-header-row\">\n                        <button \n                          className=\"add-header-btn\"\n                          onClick={() => addRequestHeader(`Header-${Object.keys(requestHeaders).length + 1}`, '')}\n                        >\n                          Add Header\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                )}\n                \n                {activeRequestTab === 'body' && ['POST', 'PUT', 'PATCH'].includes(currentEndpoint.method) && (\n                  <div className=\"try-it-section\">\n                    <h3>Request Body</h3>\n                    <div className=\"body-type-selector\">\n                      <button \n                        className={`body-type-btn ${bodyType === 'form' ? 'active' : ''}`}\n                        onClick={() => setBodyType('form')}\n                      >\n                        Form\n                      </button>\n                      <button \n                        className={`body-type-btn ${bodyType === 'raw' ? 'active' : ''}`}\n                        onClick={() => setBodyType('raw')}\n                      >\n                        Raw\n                      </button>\n                    </div>\n                    \n                    {bodyType === 'form' && (\n                      <div className=\"params-table\">\n                        <div className=\"param-row header\">\n                          <div className=\"param-name\">Parameter</div>\n                          <div className=\"param-value\">Value</div>\n                          <div className=\"param-type\">Type</div>\n                          <div className=\"param-required\">Required</div>\n                          </div>\n                        {currentEndpoint.bodyParams && currentEndpoint.bodyParams.map((param, index) => (\n                          <div className=\"param-row\" key={index}>\n                            <div className=\"param-name\">\n                                {param.name}\n                              {param.required && <span className=\"required-badge\">*</span>}\n                            </div>\n                            <div className=\"param-value\">\n                              <input\n                                type={param.type === 'password' ? 'password' : 'text'}\n                                className=\"param-input\"\n                                value={requestParams[param.name] || ''}\n                                onChange={(e) => updateRequestParam(param.name, e.target.value)}\n                                placeholder={param.example || `Enter ${param.name}`}\n                              />\n                              </div>\n                            <div className=\"param-type\">{param.type}</div>\n                            <div className=\"param-required\">{param.required ? 'Yes' : 'No'}</div>\n                            {param.description && (\n                              <div className=\"param-description\">\n                                <span className=\"info-icon\" title={param.description}>ℹ️</span>\n                                <div className=\"param-description-tooltip\">{param.description}</div>\n                              </div>\n                            )}\n                            </div>\n                          ))}\n                      </div>\n                    )}\n                    \n                    {bodyType === 'raw' && (\n                      <div className=\"raw-body-editor\">\n                        <textarea\n                          className=\"raw-body-textarea\"\n                          value={rawBody}\n                          onChange={(e) => setRawBody(e.target.value)}\n                          placeholder=\"Enter raw JSON body\"\n                          spellCheck=\"false\"\n                        />\n                        <div className=\"raw-body-format-btn\" onClick={() => {\n                          try {\n                            const formatted = JSON.stringify(JSON.parse(rawBody), null, 2);\n                            setRawBody(formatted);\n                          } catch (error) {\n                            // If JSON is invalid, don't format\n                            console.error('Invalid JSON:', error);\n                          }\n                        }}>\n                          Format\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n                \n                {activeRequestTab === 'auth' && (\n                  <div className=\"try-it-section\">\n                    <h3>API Key Authentication</h3>\n                    <div className=\"try-it-form-group\">\n                      <label htmlFor=\"api-key\">API Key</label>\n                      <input\n                        type=\"text\"\n                        id=\"api-key\"\n                        value={apiKey}\n                        onChange={(e) => setApiKey(e.target.value)}\n                        placeholder=\"Enter your API key (required for all requests)\"\n                      />\n                      <div className=\"auth-description\">\n                        <strong>Required for all API calls.</strong> The API key authenticates your requests and determines your access level. Add the API key as a header with the name 'X-API-KEY'.\n                      </div>\n                    </div>\n                    <div className=\"environment-info\">\n                      <h4>Current Environment: {activeEnvironment}</h4>\n                      <div className=\"environment-variables\">\n                        <div className=\"environment-variable\">\n                          <span className=\"env-var-name\">Base URL:</span>\n                          <span className=\"env-var-value\">{environments.find(e => e.name === activeEnvironment)?.variables.baseUrl || ''}</span>\n                        </div>\n                      </div>\n                      <button \n                        className=\"change-environment-btn\"\n                        onClick={toggleEnvironmentModal}\n                      >\n                        Change Environment\n                      </button>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Response Section */}\n                {(apiResponse || apiError || isLoading) && (\n                  <div className=\"try-it-response-section\">\n                    <div className=\"response-header\">\n                      <h3>Response</h3>\n                      {responseDetails && (\n                        <div className=\"response-meta\">\n                          <span className={`status-code ${responseDetails.status >= 200 && responseDetails.status < 300 ? 'success' : 'error'}`}>\n                            {responseDetails.status} {responseDetails.statusText}\n                          </span>\n                          <span className=\"response-time\">{responseDetails.time} ms</span>\n                          <span className=\"response-size\">{responseDetails.size}</span>\n                        </div>\n                      )}\n                    </div>\n                    \n                    {isLoading && (\n                      <div className=\"response-loading\">\n                        <div className=\"loading-spinner\"></div>\n                        <div>Fetching response...</div>\n                      </div>\n                    )}\n                    \n                    {apiError && !isLoading && (\n                      <div className=\"response-error\">\n                        <h4>Error</h4>\n                        <div className=\"error-message\">{apiError}</div>\n                      </div>\n                    )}\n                    \n                    {apiResponse && !isLoading && (\n                      <div className=\"response-body\">\n                        <div className=\"response-body-header\">\n                          <div style={{ display: 'flex', alignItems: 'center' }}>\n                            <span>Response Body</span>\n                            {isResponseFromApi && (\n                              <span style={{ \n                                marginLeft: '8px',\n                                fontSize: '0.7rem', \n                                padding: '0.35em 0.65em', \n                                backgroundColor: 'rgba(0, 180, 60, 0.8)', \n                                color: 'white',\n                                borderRadius: '4px'\n                              }}>\n                                API Data\n                              </span>\n                            )}\n                          </div>\n                          <button \n                            className={`copy-response-btn ${copiedCode ? 'copied' : ''}`}\n                            onClick={() => copyCodeToClipboard(JSON.stringify(apiResponse, null, 2))}\n                          >\n                            {copiedCode ? 'Copied!' : 'Copy'}\n                          </button>\n                        </div>\n                        <pre className=\"response-json\">\n                          {JSON.stringify(apiResponse, null, 2)}\n                        </pre>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        )}\n        \n        {/* Environment Selection Modal */}\n        {showEnvironmentModal && (\n          <div className=\"environment-modal\">\n            <div className=\"environment-modal-header\">\n              <h3>Select Environment</h3>\n            </div>\n            <div className=\"environment-list\">\n              {environments.map((env, index) => (\n                <div \n                  key={index} \n                  className={`environment-item ${activeEnvironment === env.name ? 'active' : ''}`}\n                  onClick={() => selectEnvironment(env.name)}\n                >\n                  {env.name}\n                </div>\n              ))}\n            </div>\n            <div className=\"environment-modal-footer\">\n              <button \n                className=\"close-env-modal-btn\"\n                onClick={toggleEnvironmentModal}\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        )}\n      </main>\n      \n      {/* API Configuration Modal */}\n      {showApiConfigModal && (\n        <div className=\"api-config-modal-overlay\">\n          <div className=\"api-config-modal\">\n            <div className=\"api-config-modal-header\">\n              <h3>API Configuration</h3>\n              <button className=\"api-config-modal-close\" onClick={toggleApiConfigModal}>×</button>\n            </div>\n            <div className=\"api-config-modal-content\">\n              <div className=\"config-field-container\">\n                <label className=\"config-field-label\">API Base URL</label>\n                <div className=\"config-input-group\">\n                  <input\n                    type=\"text\"\n                    className=\"config-input\"\n                    value={apiBaseUrl}\n                    onChange={(e) => setApiBaseUrl(e.target.value)}\n                    placeholder=\"Enter API base URL (e.g., https://hrms-api.xpectrum-ai.com/hrms/api/v1)\"\n                  />\n                </div>\n                <p className=\"config-description\">\n                  Base URL for the API endpoint (without trailing slash)\n                </p>\n              </div>\n              <div className=\"config-field-container\">\n                <label className=\"config-field-label\">Default Employee ID</label>\n                <div className=\"config-input-group\">\n                  <input\n                    type=\"text\"\n                    className=\"config-input\"\n                    value={realEmployeeId}\n                    onChange={(e) => setRealEmployeeId(e.target.value)}\n                    placeholder=\"Enter employee ID (e.g., EM37938)\"\n                  />\n                </div>\n                <p className=\"config-description\">\n                  The default employee ID to use for endpoints requiring one\n                </p>\n              </div>\n            </div>\n            <div className=\"api-config-modal-footer\">\n              <button \n                className=\"save-config-button\"\n                onClick={toggleApiConfigModal}\n              >\n                Save & Close\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n      \n      {/* Custom cursor for enhanced UI effect */}\n      <div className=\"custom-cursor\"></div>\n      \n      {/* Add custom CSS for the new components */}\n      <style>\n        {`\n         .api-base-url-container {\n           background-color: var(--background-secondary);\n           border-radius: 4px;\n           padding: 12px 16px;\n           margin-bottom: 20px;\n           display: flex;\n           flex-direction: column;\n           gap: 8px;\n         }\n         \n         .api-base-url-label {\n           font-size: 0.9rem;\n           font-weight: 600;\n           color: var(--text-secondary);\n         }\n         \n         .api-base-url-value {\n           position: relative;\n         }\n         \n         .api-base-url-input {\n           width: 100%;\n           padding: 8px 12px;\n           background-color: var(--background-primary);\n           border: 1px solid var(--border-color);\n           border-radius: 4px;\n           color: var(--text-primary);\n           font-family: monospace;\n           font-size: 0.9rem;\n         }\n         \n         .api-base-url-input:focus {\n           outline: none;\n           border-color: var(--accent-color);\n           box-shadow: 0 0 0 2px rgba(var(--accent-color-rgb), 0.25);\n         }\n         \n         .api-base-url-indicator {\n           background-color: var(--background-secondary);\n           border-radius: 4px;\n           padding: 8px 12px;\n           margin-bottom: 16px;\n           display: flex;\n           justify-content: space-between;\n           align-items: center;\n         }\n         \n         .url-input-container {\n           display: flex;\n           flex-grow: 1;\n           position: relative;\n         }\n         \n         .url-input {\n           flex-grow: 1;\n           padding: 0.5rem 0.75rem;\n           min-height: 40px;\n           font-family: monospace;\n           font-size: 0.9rem;\n           background-color: var(--background-primary, #1e1e1e);\n           color: var(--text-primary, #ffffff);\n           border: none;\n           outline: none;\n           width: 100%;\n         }\n         \n         .url-reset-button {\n           position: absolute;\n           right: 5px;\n           top: 50%;\n           transform: translateY(-50%);\n           background: none;\n           border: none;\n           color: var(--text-secondary, #888888);\n           cursor: pointer;\n           font-size: 16px;\n           padding: 0 5px;\n           display: flex;\n           align-items: center;\n           justify-content: center;\n         }\n         \n         .url-reset-button:hover {\n           color: var(--text-primary, #ffffff);\n         }\n         \n         .url-display {\n           cursor: text !important;\n         }\n         \n         .url-display:hover::after {\n           content: 'Click to edit URL';\n           position: absolute;\n           top: -30px;\n           left: 50%;\n           transform: translateX(-50%);\n           background: var(--background-tertiary, #333333);\n           color: var(--text-primary, #ffffff);\n           padding: 5px 10px;\n           border-radius: 4px;\n           font-size: 12px;\n           white-space: nowrap;\n           z-index: 10;\n           opacity: 0.9;\n         }\n         \n         .current-base-url {\n           display: flex;\n           align-items: center;\n           gap: 8px;\n           font-size: 0.9rem;\n         }\n         \n         .current-base-url code {\n           background: var(--background-tertiary);\n           padding: 2px 6px;\n           border-radius: 4px;\n           font-family: monospace;\n           max-width: 300px;\n           overflow: hidden;\n           text-overflow: ellipsis;\n           white-space: nowrap;\n         }\n         \n         .edit-url-button {\n           background: var(--accent-color);\n           color: white;\n           border: none;\n           border-radius: 4px;\n           padding: 2px 8px;\n           font-size: 0.8rem;\n           cursor: pointer;\n         }\n         \n         .api-config-modal-overlay {\n           position: fixed;\n           top: 0;\n           left: 0;\n           right: 0;\n           bottom: 0;\n           background-color: rgba(0, 0, 0, 0.5);\n           display: flex;\n           justify-content: center;\n           align-items: center;\n           z-index: 1000;\n         }\n         \n         .api-config-modal {\n           background-color: var(--background-primary);\n           border-radius: 8px;\n           width: 90%;\n           max-width: 500px;\n           max-height: 90vh;\n           overflow-y: auto;\n           box-shadow: 0 4px 20px rgba(0, 0, 0, 0.3);\n         }\n         \n         .api-config-modal-header {\n           display: flex;\n           justify-content: space-between;\n           align-items: center;\n           padding: 16px 20px;\n           border-bottom: 1px solid var(--border-color);\n         }\n         \n         .api-config-modal-header h3 {\n           margin: 0;\n           font-size: 1.2rem;\n           color: var(--text-primary);\n         }\n         \n         .api-config-modal-close {\n           background: none;\n           border: none;\n           font-size: 1.5rem;\n           cursor: pointer;\n           color: var(--text-secondary);\n         }\n         \n         .api-config-modal-content {\n           padding: 20px;\n         }\n         \n         .api-config-modal-footer {\n           padding: 16px 20px;\n           border-top: 1px solid var(--border-color);\n           display: flex;\n           justify-content: flex-end;\n         }\n         \n         .save-config-button {\n           background-color: var(--accent-color);\n           color: white;\n           border: none;\n           border-radius: 4px;\n           padding: 8px 16px;\n           font-size: 0.9rem;\n           cursor: pointer;\n         }\n         \n         .api-config-button {\n           background: none;\n           border: none;\n           cursor: pointer;\n           padding: 0;\n           margin-right: 8px;\n           font-size: 1rem;\n           color: var(--text-secondary);\n         }\n         \n         .api-controls {\n           display: flex;\n           align-items: center;\n         }\n         \n         .api-url-button {\n           background-color: var(--background-tertiary);\n           border: none;\n           border-radius: 4px;\n           padding: 4px 8px;\n           margin-right: 8px;\n           font-size: 0.8rem;\n           cursor: pointer;\n           color: var(--text-secondary);\n         }\n         \n         .api-config-summary {\n           background-color: var(--background-secondary);\n           border-radius: 4px;\n           padding: 8px 12px;\n           margin-bottom: 16px;\n         }\n         \n         .api-config-row {\n           display: flex;\n           align-items: center;\n           margin-bottom: 4px;\n         }\n         \n         .api-config-label {\n           font-weight: 500;\n           margin-right: 8px;\n         }\n         \n         .api-config-value {\n           font-family: monospace;\n           background: var(--background-tertiary);\n           padding: 2px 6px;\n           border-radius: 4px;\n           flex: 1;\n           margin-right: 8px;\n           overflow: hidden;\n           text-overflow: ellipsis;\n           white-space: nowrap;\n         }\n         \n         .small-config-button {\n           background: var(--accent-color);\n           color: white;\n           border: none;\n           border-radius: 4px;\n           padding: 2px 8px;\n           font-size: 0.8rem;\n           cursor: pointer;\n         }\n         \n         .raw-body-header {\n           display: flex;\n           justify-content: space-between;\n           align-items: center;\n           padding: 8px 12px;\n           background-color: var(--background-secondary);\n           border-top-left-radius: 4px;\n           border-top-right-radius: 4px;\n         }\n         \n         .format-json-btn {\n           background-color: var(--accent-color);\n           color: white;\n           border: none;\n           border-radius: 4px;\n           padding: 4px 8px;\n           font-size: 0.8rem;\n           cursor: pointer;\n         }\n         \n         .format-json-btn:hover {\n           background-color: var(--accent-color-hover);\n         }\n         \n         .raw-body-editor {\n           width: 100%;\n           min-height: 300px;\n           padding: 12px;\n           font-family: monospace;\n           font-size: 0.9rem;\n           line-height: 1.4;\n           background-color: var(--background-primary);\n           color: var(--text-primary);\n           border: 1px solid var(--border-color);\n           border-top: none;\n           resize: vertical;\n         }\n         \n         .raw-body-editor:focus {\n           outline: none;\n           border-color: var(--accent-color);\n         }\n\n         .try-it-section {\n           padding: 20px;\n           background: var(--background-primary);\n           border-radius: 8px;\n           margin-bottom: 20px;\n         }\n\n         .body-type-selector {\n           display: flex;\n           gap: 8px;\n           margin-bottom: 16px;\n         }\n\n         .body-type-btn {\n           padding: 8px 16px;\n           border: 1px solid var(--border-color);\n           background: var(--background-secondary);\n           color: var(--text-primary);\n           border-radius: 4px;\n           cursor: pointer;\n           font-size: 0.9rem;\n           transition: all 0.2s ease;\n         }\n\n         .body-type-btn.active {\n           background: var(--accent-color);\n           color: white;\n           border-color: var(--accent-color);\n         }\n\n         .raw-body-section {\n           border: 1px solid var(--border-color);\n           border-radius: 4px;\n           overflow: hidden;\n         }\n\n         .raw-body-header {\n           display: flex;\n           justify-content: space-between;\n           align-items: center;\n           padding: 8px 12px;\n           background: var(--background-secondary);\n           border-bottom: 1px solid var(--border-color);\n         }\n\n         .content-type-selector {\n           display: flex;\n           align-items: center;\n         }\n\n         .content-type-select {\n           padding: 4px 8px;\n           background: var(--background-primary);\n           color: var(--text-primary);\n           border: 1px solid var(--border-color);\n           border-radius: 4px;\n           font-size: 0.9rem;\n         }\n\n         .format-json-btn {\n           padding: 4px 8px;\n           background: var(--accent-color);\n           color: white;\n           border: none;\n           border-radius: 4px;\n           font-size: 0.8rem;\n           cursor: pointer;\n           transition: background 0.2s ease;\n         }\n\n         .format-json-btn:hover {\n           background: var(--accent-color-hover);\n         }\n\n         .editor-container {\n           position: relative;\n           background: var(--background-primary);\n         }\n\n         .raw-body-editor {\n           width: 100%;\n           min-height: 300px;\n           padding: 12px;\n           background: var(--background-primary);\n           color: var(--text-primary);\n           border: none;\n           font-family: monospace;\n           font-size: 0.9rem;\n           line-height: 1.5;\n           resize: vertical;\n           tab-size: 2;\n         }\n\n         .raw-body-editor:focus {\n           outline: none;\n         }\n\n         .form-body-section {\n           padding: 16px;\n           border: 1px solid var(--border-color);\n           border-radius: 4px;\n         }\n\n         .form-body-fields {\n           display: flex;\n           flex-direction: column;\n           gap: 16px;\n         }\n\n         .form-field {\n           display: flex;\n           flex-direction: column;\n           gap: 4px;\n         }\n\n         .form-field-label {\n           display: flex;\n           align-items: center;\n           gap: 8px;\n           font-weight: 500;\n           color: var(--text-primary);\n         }\n\n         .required-badge {\n           font-size: 0.7rem;\n           padding: 2px 6px;\n           background: var(--accent-color);\n           color: white;\n           border-radius: 4px;\n           font-weight: normal;\n         }\n\n         .form-field-input {\n           padding: 8px 12px;\n           background: var(--background-primary);\n           border: 1px solid var(--border-color);\n           border-radius: 4px;\n           color: var(--text-primary);\n           font-size: 0.9rem;\n           width: 100%;\n         }\n\n         .form-field-input:focus {\n           outline: none;\n           border-color: var(--accent-color);\n         }\n\n         .form-field-description {\n           font-size: 0.8rem;\n           color: var(--text-secondary);\n         }\n        `}\n      </style>\n    </div>\n  );\n};\n\nexport default ApiDoc; ","const ErrorPage = () => {\n  return <div>Error Page</div>;\n};\n\nexport default ErrorPage;\n","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport './App.css'\nimport ApiDoc from './pages/ApiDoc'\nimport ErrorPage from './pages/ErrorPage'\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Routes>\n          <Route path='/' Component={ApiDoc} />\n          <Route path='*' Component={ErrorPage} />\n        </Routes>\n      </Router>\n    </>\n  )\n}\n\nexport default App\n","import { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.tsx'\n\ncreateRoot(document.getElementById('root')!).render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n)\n"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","createRoot","ApiDoc","activeTab","setActiveTab","useState","responseOpen","setResponseOpen","openCategories","setOpenCategories","activeEndpoint","setActiveEndpoint","dropdownOpen","setDropdownOpen","mobileMenuOpen","setMobileMenuOpen","darkMode","setDarkMode","searchTerm","setSearchTerm","dropdownRef","useRef","dropdownPosition","setDropdownPosition","animating","setAnimating","dropdownButtonRef","apiKey","setApiKey","apiResponse","setApiResponse","isLoading","setIsLoading","showTryItModal","setShowTryItModal","apiError","setApiError","requestParams","setRequestParams","copiedCode","setCopiedCode","activeRequestTab","setActiveRequestTab","responseDetails","setResponseDetails","requestHeaders","setRequestHeaders","rawBody","setRawBody","bodyType","setBodyType","showEnvironmentModal","setShowEnvironmentModal","environments","setEnvironments","activeEnvironment","setActiveEnvironment","apiBaseUrl","setApiBaseUrl","realEmployeeId","setRealEmployeeId","isEditingApiConfig","setIsEditingApiConfig","isResponseFromApi","setIsResponseFromApi","editableUrl","setEditableUrl","isEditingUrl","setIsEditingUrl","useEffect","savedBaseUrl","endpointData","currentEndpoint","loadRealEmployeeData","env","currentApiKey","startTime","apiUrl","planName","applicationId","queryParams","param","queryString","options","bodyData","response","contentType","status","statusText","time","data","responseSize","formattedSize","error","endTime","validateEmployeeData","missingFields","field","handleApiCall","_a","parsedBody","headers","value","key","text","addRequestHeader","prev","removeRequestHeader","newHeaders","updateRequestParam","paramName","toggleEnvironmentModal","selectEnvironment","envName","handleCategoryClick","category","cat","categoryElement","handleEndpointClick","endpoint","event","getMethodClassName","method","renderCodeSample","language","copyCodeToClipboard","code","err","renderResponseSchema","jsxs","jsx","renderResponseExample","formattedResponse","totalLength","handleClickOutside","sidebar","mouseEvent","newCursor","customCursor","toggleMobileMenu","handleMobileEndpointClick","toggleTheme","newDarkMode","getFilteredEndpoints","handleSearchChange","searchText","highlightMatch","regex","showApiConfigModal","setShowApiConfigModal","toggleApiConfigModal","endpointKey","index","defaultUrl","currentUrl","Fragment","newKey","formatted","ErrorPage","App","Router","Routes","Route","StrictMode"],"mappings":"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AA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA8cH,CAAA,CAAA,EACF,CAEJ,EC/6HM4B,GAAY,IACT5B,EAAA,IAAC,OAAI,SAAU,YAAA,CAAA,ECIxB,SAAS6B,IAAM,CACb,OAEI7B,MAAAyB,EAAAA,SAAA,CAAA,SAAAzB,EAAA,IAAC8B,GACC,CAAA,SAAA/B,EAAAA,KAACgC,GACC,CAAA,SAAA,CAAA/B,EAAA,IAACgC,GAAM,CAAA,KAAK,IAAI,UAAWhK,GAAQ,EAClCgI,EAAA,IAAAgC,GAAA,CAAM,KAAK,IAAI,UAAWJ,EAAW,CAAA,CAAA,CACxC,CAAA,CACF,CAAA,EACF,CAEJ,CCXA7J,GAAW,SAAS,eAAe,MAAM,CAAE,EAAE,OAC1CiI,EAAA,IAAAiC,EAAA,WAAA,CACC,SAACjC,EAAAA,IAAA6B,GAAA,CAAA,CAAI,CACP,CAAA,CACF","x_google_ignoreList":[0,1,2]}